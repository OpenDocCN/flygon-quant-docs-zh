- en: Stock Screening
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 股票筛选
- en: 原文：[https://www.backtrader.com/blog/posts/2016-08-15-stock-screening/stock-screening/](https://www.backtrader.com/blog/posts/2016-08-15-stock-screening/stock-screening/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.backtrader.com/blog/posts/2016-08-15-stock-screening/stock-screening/](https://www.backtrader.com/blog/posts/2016-08-15-stock-screening/stock-screening/)
- en: 'Looking for some other things I came across a question on one of the *StackOverlow*
    family sites: *Quantitative Finance* aka *Quant StackExchange*. The question:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在寻找其他东西时，我在 *StackOverlow* 家族网站之一上看到了一个问题：*Quantitative Finance*，也就是 *Quant
    StackExchange*。问题是：
- en: '[Open source software for stock screening and scanning using technical analysis?](http://quant.stackexchange.com/questions/27559/open-source-software-for-stock-screening-and-scanning-using-technical-analysis)'
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用技术分析进行股票筛选和扫描的开源软件？](http://quant.stackexchange.com/questions/27559/open-source-software-for-stock-screening-and-scanning-using-technical-analysis)'
- en: It is tagged as *Python*, so it is worth seeing if *backtrader* is up to the
    task.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 它被标记为 *Python*，所以值得看看 *backtrader* 是否能胜任这项任务。
- en: The Analyzer itself
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析器本身
- en: The problem seems appropriate for an easy analyzer. Although the problem just
    wants those above the moving average, we’ll keep extra information like the stocks
    which don’t meet the criteria, to make sure the grain is being actually separated
    from the chaff.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题似乎适合一个简单的分析器。虽然问题只想要那些高于移动平均线的股票，但我们会保留额外的信息，比如那些不符合条件的股票，以确保谷物确实被分离出来。
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Of course one also needs `import backtrader as bt`
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，还需要 `import backtrader as bt`
- en: 'That pretty much solves the problem. Analysis of the *Analyzer*:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上解决了问题。对 *Analyzer* 的分析：
- en: Have the `period` as a parameter to have a flexible analyzer
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `period` 作为参数，以便有一个灵活的分析器
- en: '`start` method'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`start` 方法'
- en: For each *data* in the system make a *Simple Moving Average* (`SMA`) for it.
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对系统中的每个 *data* 制作一个 *Simple Moving Average*（`SMA`）。
- en: '`stop` method'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stop` 方法'
- en: Look which *data* (`close` if nothing else is specified) is above its *sma*
    and store that in a *list* under the key `over` in the returns (`rets`)
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 查看哪个 *data*（如果没有其他指定，则为 `close`）高于其 *sma*，并将其存储在返回值（`rets`）的键 `over` 下的 *list*
    中
- en: The member `rets` is standard in *analyzers* and happens to be a `collections.OrderedDict`.
    Created by the base class.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 成员 `rets` 在 *analyzers* 中是标准的，是一个 `collections.OrderedDict`。由基类创建。
- en: Keep the ones that doesn’t meet the criteria under a key `under`
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将不符合条件的股票保留在 `under` 键下
- en: 'The issue now: getting the analyzer up and running.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的问题是：让分析器运行起来。
- en: Note
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We assume the code has been put in a file named `st-screener.py`
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设代码已经放在一个名为 `st-screener.py` 的文件中
- en: Approach 1
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法 1
- en: '*backtrader* includes, since almost the beginning of time, an automated script
    running called `btrun`, which can load strategies, indicators, analyzers from
    python modules, parse arguments and of course plot.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*backtrader* 自从很早以前就包含了一个名为 `btrun` 的自动脚本运行，可以从 Python 模块加载策略、指标、分析器，解析参数，当然还可以绘图。'
- en: 'Let’s do a run:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来运行一下：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We have used a set of well known tickers:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了一组众所周知的股票代码：
- en: '`AAPL`, `IBM`, `NVDA`, `ORCL`, `TSLA`, `YHOO`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AAPL`, `IBM`, `NVDA`, `ORCL`, `TSLA`, `YHOO`'
- en: And the only one that happens to be under the `10` days *Simple Moving Average*
    is `TSLA`.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一一个低于 `10` 天 *Simple Moving Average* 的是 `TSLA`。
- en: 'Let’s try a `50` days period. Yes, this can also be controlled with `btrun`.
    The run (output shortened):'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一个 `50` 天的周期。是的，这也可以通过 `btrun` 控制。运行（输出缩短）：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Notice how the `50` days period has been specified in the command line:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 注意如何在命令行中指定了 `50` 天的周期：
- en: '`st-screener:Screener_SMA:period=50`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`st-screener:Screener_SMA:period=50`'
- en: In the previous run this was `st-screener:Screener_SMA` and the default `10`
    from the code was used.
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在上一次运行中，这是 `st-screener:Screener_SMA`，并且使用了代码中的默认 `10`。
- en: We also needed to adjust `fromdate` to make sure there were enough bars to consider
    for the calculation of the *Simple Moving Averages*
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要调整 `fromdate`，以确保有足够的条形图用于计算 *Simple Moving Averages*
- en: In this case all tickers are *above* the `50` days moving average.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，所有股票的 *50* 天移动平均线都在上面。
- en: Approach 2
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 方法 2
- en: Craft a small script (see below for the full code) to have finer control of
    what we do. But the results are the same.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 制作一个小脚本（请参见下面的完整代码）以更好地控制我们的操作。但结果是一样的。
- en: 'The core is rather small:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 核心相当小：
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Being the rest about argument parsing mostly.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 其余大部分是关于参数解析的。
- en: 'For `10` days (again shortening the output):'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `10` 天（再次缩短输出）：
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Same results. So let’s avoid repeating it for `50` days.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 结果相同。所以让我们避免重复为 `50` 天做这个。
- en: Concluding
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: Both the `btrun` from *Approach 1* and the small script from *Approach 2* use
    exactly the same *analyzer* and therefore deliver the same results.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '*方法1*的`btrun`和*方法2*的小脚本都使用完全相同的*analyzer*，因此提供相同的结果。'
- en: And *backtrader* has been able to withstand yet another small challenge
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 而*backtrader*已经能够应对又一个小挑战。
- en: 'Two final notes:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 两个最后的注意事项：
- en: Both approaches use the built-in *writer* functionality to deliver the output.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这两种方法都使用内置的*writer*功能来提供输出。
- en: As parameter to `btrun` with `--writer`
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为`btrun`的参数，带有`--writer`。
- en: As parameter to `cerebro.run` with `writer=True`
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为参数传递给`cerebro.run`时，带有`writer=True`。
- en: In both cases `runonce` has been deactivated. This is to make sure the online
    data keeps synchronized, because the results could have different lengths (one
    of the stocks could have traded less)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在两种情况下，`runonce`都已被停用。这是为了确保在线数据保持同步，因为结果可能具有不同的长度（其中一个股票可能交易较少）。
- en: Script usage
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 脚本用法
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The full script
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完整的脚本
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
