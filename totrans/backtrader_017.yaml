- en: Quickstart
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速开始
- en: 原文：[https://www.backtrader.com/docu/quickstart/quickstart/](https://www.backtrader.com/docu/quickstart/quickstart/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.backtrader.com/docu/quickstart/quickstart/](https://www.backtrader.com/docu/quickstart/quickstart/)
- en: Note
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The data files used in the quickstart guide are updated from time to time, which
    means that the `adjusted close` changes and with it the `close` (and the other
    components). That means that the actual output may be different to what was put
    in the documentation at the time of writing.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 快速入门指南中使用的数据文件会不时更新，这意味着`调整后的收盘价`会变化，以及`收盘价`（以及其他组件）。这意味着实际输出可能与撰写文档时的情况不同。
- en: Using the platform
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用平台
- en: Let’s run through a series of examples (from almost an empty one to a fully
    fledged strategy) but not without before roughly explaining 2 basic concepts when
    working with **backtrader**
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一系列的例子运行一遍（从几乎空白到完全成熟的策略），但在粗略解释**backtrader**的两个基本概念之前。
- en: Lines
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 线
- en: Data Feeds, Indicators and Strategies have *lines*.
  id: totrans-7
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据源、指标和策略都有*线*。
- en: 'A line is a succession of points that when joined together form this line.
    When talking about the markets, a Data Feed has usually the following set of points
    per day:'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一条线是一系列的点，当它们连接在一起时形成这条线。当谈到市场时，一个数据源通常每天有以下一组点：
- en: Open, High, Low, Close, Volume, OpenInterest
  id: totrans-9
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开盘价、最高价、最低价、收盘价、成交量、持仓量
- en: The series of “Open”s along time is a Line. And therefore a Data Feed has usually
    6 lines.
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一系列“开盘价”随时间的变化是一条线。因此，一个数据源通常有6条线。
- en: If we also consider “DateTime” (which is the actual reference for a single point),
    we could count 7 lines.
  id: totrans-11
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果我们还考虑“DateTime”（这是单个点的实际参考），我们可以计算出7条线。
- en: Index 0 Approach
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第0个指数方法
- en: 'When accessing the values in a line, the current value is accessed with index:
    *0*'
  id: totrans-13
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当访问线中的值时，当前值通过索引访问：*0*
- en: And the “last” output value is accessed with *-1*. This in line with Python
    conventions for iterables (and a line can be iterated and is therefore an iterable)
    where index *-1* is used to access the “last” item of the iterable/array.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过*-1*访问“最后”输出值。这符合Python对可迭代对象的惯例（一条线可以被迭代，因此是可迭代的），其中索引*-1*用于访问可迭代/数组的“最后”项。
- en: In our case is the last **output** value what’s getting accessed.
  id: totrans-15
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在我们的情况下，访问的是最后的**输出**值。
- en: As such and being index *0* right after *-1*, it is used to access the current
    moment in line.
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，作为* -1 *之后的索引* 0 *，它用于访问当前行。
- en: 'With that in mind and if we imagine a Strategy featuring a Simple Moving average
    created during initialization:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到这一点，如果我们想象一个在初始化过程中创建的简单移动平均策略：
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The easiest and simplest way to access the current value of this moving average:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 访问当前移动平均线的最简单和最简单的方法：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: There is no need to know how many bars/minutes/days/months have been processed,
    because “0” uniquely identifies the current instant.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 无需知道已处理了多少个条/分钟/天/月，因为“0”唯一标识当前时刻。
- en: 'Following pythonic tradition, the “last” output value is accessed using *-1*:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 按照Python的传统，通过*-1*来访问“最后”输出值：
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Of course earlier output values can be accessed with -2, -3, …
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，早期的输出值可以用-2、-3等来访问
- en: 'From 0 to 100: the samples'
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从0到100：样本
- en: Basic Setup
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本设置
- en: Let’s get running.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧。
- en: '[PRE3]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'After the execution the output is:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后输出为：
- en: '[PRE4]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In this example:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中：
- en: backtrader was imported
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: backtrader被导入
- en: The Cerebro engine was instantiated
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cerebro引擎被实例化
- en: The resulting *cerebro* instance was told to *run* (loop over data)
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建的*cerebro*实例被告知*运行*（循环遍历数据）
- en: And the resulting outcome was printed out
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 结果输出并打印出来
- en: 'Although it doesn’t seem much, let’s point out something explicitly shown:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然看起来不起眼，但让我们明确指出一些事情：
- en: The Cerebro engine has created a *broker* instance in the background
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cerebro引擎在后台创建了一个*broker*实例
- en: The instance already has some cash to start with
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实例已经有一些现金可以开始了
- en: This behind the scenes broker instantiation is a constant trait in the platform
    to simplify the life of the user. If no broker is set by the user, a default one
    is put in place.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在幕后经纪人实例化是该平台的一个固定特征，以简化用户的生活。如果用户未设置经纪人，则会放置一个默认的经纪人。
- en: And 10K monetary units is a usual value with some brokers to begin with.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 10000个货币单位是一些经纪人开始使用的常见值。
- en: Setting the Cash
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 设置现金
- en: In the world of finance, for sure only “losers” start with 10k. Let’s change
    the cash and run the example again.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在金融世界中，确实只有“失败者”才从10k开始。让我们改变现金并再次运行示例。
- en: '[PRE5]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After the execution the output is:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后输出为：
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Mission accomplished. Let’s move to tempestuous waters.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 任务完成。让我们转向风云变幻的水域。
- en: Adding a Data Feed
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加一个 Data Feed
- en: Having cash is fun, but the purpose behind all this is to let an automated strategy
    multiply the cash without moving a finger by operating on an asset which we see
    as a *Data Feed*
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有现金很有趣，但所有这一切背后的目的是让一个自动化策略通过对我们视为 *Data Feed* 的资产进行操作而无需动手指就能增加现金。
- en: Ergo … No *Data Feed* -> **No Fun**. Let’s add one to the ever growing example.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 因此... 没有 *Data Feed* -> **没趣**。让我们给这个不断增长的示例添加一个。
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After the execution the output is:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后的输出为：
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The amount of boilerplate has grown slightly, because we added:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 模板代码的数量略有增加，因为我们添加了：
- en: Finding out where our example script is to be able to locate the sample *Data
    Feed* file
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 找出我们示例脚本所在的位置，以便能够定位示例 *Data Feed* 文件
- en: Having *datetime* objects to filter on which data from the *Data Feed* we will
    be operating
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有 *datetime* 对象用于过滤我们将要操作的 *Data Feed* 中的数据。
- en: Aside from that, the *Data Feed* is created and added to **cerebro**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，*Data Feed* 被创建并添加到 **cerebro** 中。
- en: The output has not changed and it would be a miracle if it had.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 输出没有变化，如果有变化将是个奇迹。
- en: Note
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Yahoo Online sends the CSV data in date descending order, which is not the standard
    convention. The *reversed=True* prameter takes into account that the CSV data
    in the file has already been **reversed** and has the standard expected date ascending
    order.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Yahoo Online 以日期降序发送 CSV 数据，这不是标准约定。*reversed=True* 参数考虑到 CSV 文件中的数据已经被 **反转**，并具有标准预期的日期升序。
- en: Our First Strategy
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们的第一个策略
- en: The cash is in the *broker* and the *Data Feed* is there. It seems like risky
    business is just around the corner.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现金在 *broker* 中，而 *Data Feed* 在那里。看起来，危险的生意就在拐角处。
- en: Let’s put a Strategy into the equation and print the “Close” price of each day
    (bar).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将一个策略引入到等式中，并打印每天（每个 bar）的“Close”价格。
- en: '**DataSeries** (the underlying class in *Data Feeds*) objects have aliases
    to access the well known OHLC (Open High Low Close) daily values. This should
    ease up the creation of our printing logic.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**DataSeries**（*Data Feeds* 中的基础类）对象具有访问已知 OHLC（开盘价 最高价 最低价 收盘价）日常值的别名。这应该能够简化我们的打印逻辑的创建。'
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'After the execution the output is:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后的输出为：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Someone said the stockmarket was risky business, but it doesn’t seem so.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 有人说股票市场是危险的生意，但似乎并不是这样。
- en: 'Let’s explain some of the magic:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解释一些魔法：
- en: Upon **init** being called the strategy already has a list of datas that are
    present in the platform
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在调用 **init** 后，策略已经拥有了平台上存在的数据列表。
- en: This is a standard Python *list* and datas can be accessed in the order they
    were inserted.
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是一个标准的 Python *list*，可以按插入顺序访问数据。
- en: The first data in the list self.datas[0] is the default data for trading operations
    and to keep all strategy elements synchronized (*it’s the system clock*)
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列表中的第一个数据 self.datas[0] 是默认用于交易操作的数据，并且用于保持所有策略元素同步（*它是系统时钟*）。
- en: self.dataclose = self.datas[0].close keeps a reference to the *close line*.
    Only one level of indirection is later needed to access the close values.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: self.dataclose = self.datas[0].close 保持对 *close 线* 的引用。稍后只需要一级间接引用就能访问 close
    值。
- en: The strategy next method will be called on each bar of the system clock (self.datas[0]).
    This is true until other things come into play like *indicators*, which need some
    bars to start producing an output. More on that later.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 策略的 next 方法将在系统时钟的每个 bar 上调用（self.datas[0]）。直到其他因素开始起作用，如 *指标*，它们需要一些 bar 才能开始产生输出。稍后会详细介绍。
- en: Adding some Logic to the Strategy
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在策略中添加一些逻辑
- en: Let’s try some crazy idea we had by looking at some charts
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过查看一些图表来尝试一些疯狂的想法。
- en: If the price has been falling 3 sessions in a row … BUY BUY BUY!!!
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果价格连续下跌 3 个交易会话... 买买买！！！
- en: '[PRE11]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After the execution the output is:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后的输出为：
- en: '[PRE12]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Several “BUY” creation orders were issued, our porftolio value was decremented.
    A couple of important things are clearly missing.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 发出了多个“BUY”创建订单，我们的投资组合价值减少了。显然有几个重要的事情缺失了。
- en: The order was created but it is unknown if it was executed, when and at what
    price.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订单已创建，但不清楚是否已执行，何时执行以及以什么价格执行。
- en: The next example will build upon that by listening to notifications of order
    status.
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下一个示例将在此基础上建立，通过监听订单状态通知。
- en: 'The curious reader may ask how many shares are being bought, what asset is
    being bought and how are orders being executed. Where possible (and in this case
    it is) the platform fills in the gaps:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 好奇的读者可能会问买了多少股票，购买了什么资产以及订单是如何执行的。在可能的情况下（在这种情况下是可能的），平台会填补这些空白：
- en: self.datas[0] (the main data aka system clock) is the target asset if no other
    one is specified
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: self.datas[0]（主数据，也称为系统时钟）是目标资产，如果没有指定其他资产
- en: The stake is provided behind the scenes by a *position sizer* which uses a fixed
    stake, being the default “1”. It will be modified in a later example
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 股份是由*position sizer*在后台提供的，它使用固定的股份，“1”是默认值。稍后将进行修改。
- en: The order is executed “At Market”. The broker (shown in previous examples) executes
    this using the opening price of the next bar, because that’s the 1^(st) tick after
    the current under examination bar.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订单是“市价”执行的。经纪人（在前面的示例中显示）使用下一根bar的开盘价执行此操作，因为那是当前检查的bar之后的第一个tick。
- en: The order is executed so far without any commission (more on that later)
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 到目前为止，订单已经执行了，没有任何佣金（稍后会详细介绍）
- en: Do not only buy … but SELL
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不仅买……还卖
- en: After knowing how to enter the market (long), an “exit concept” is needed and
    also understanding whether the strategy is in the market.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解如何进入市场（做多）之后，需要一个“退出概念”，并且还要了解策略是否处于市场中。
- en: Luckily a Strategy object offers access to a *position* attribute for the default
    *data feed*
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 幸运的是，Strategy对象为默认的*data feed*提供了对*position*属性的访问权限
- en: Methods *buy* and *sell* return the **created** (not yet executed) order
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*buy*和*sell*方法返回**创建的**（尚未执行）订单'
- en: Changes in orders’ status will be notified to the strategy via a *notify* method
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订单状态的更改将通过*notify*方法通知策略
- en: 'The *“exit concept”* will be an easy one:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '*“退出概念”*将是一个简单的概念：'
- en: Exit after 5 bars (on the 6^(th) bar) have elapsed for good or for worse
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在过了5个bar（第6个bar）之后退出，无论好坏都要退出
- en: 'Please notice that there is no “time” or “timeframe” implied: number of bars.
    The bars can represent 1 minute, 1 hour, 1 day, 1 week or any other time period.'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 请注意，没有暗示“时间”或“时间框架”：bar的数量。bar可以表示1分钟、1小时、1天、1周或任何其他时间段。
- en: Although we know the data source is a daily one, the strategy makes no assumption
    about that.
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 尽管我们知道数据源是每日的，但策略不对此做任何假设。
- en: 'Additionally and to simplify:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，为了简化：
- en: Do only allow a Buy order if not yet in the market
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有在市场中还没有持仓时才允许买入订单
- en: Note
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The *next* method gets no “bar index” passed and therefore it seems obscure
    how to understand when 5 bars may have elapsed, but this has been modeled in pythonic
    way: call *len* on an object and it will tell you the length of its *lines*. Just
    write down (save in a variable) at which length in an operation took place and
    see if the current length is 5 bars away.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*next*方法没有传递“bar index”，因此似乎不清楚如何理解5个bar是否已经过去，但这已经以Pythonic的方式进行了建模：在对象上调用*len*，它将告诉您它的*lines*长度。只需记录（保存在变量中）操作发生的长度，然后查看当前长度是否相差5个bar。'
- en: '[PRE13]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'After the execution the output is:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后的输出如下：
- en: '[PRE14]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Blistering Barnacles!!! The system made money … something must be wrong
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 烈焰般的船舱!!! 系统赚了钱……一定有问题。
- en: 'The broker says: Show me the money!'
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 经纪人说：给我看看钱！
- en: And the money is called “commission”.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 钱被称为“佣金”。
- en: Let’s add a reasonable *0.1%* commision rate per operation (both for buying
    and selling … yes the broker is avid …)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们为每次操作（买入和卖出……是的，经纪人很贪婪……）添加合理的*0.1%*佣金率。
- en: 'A single line will suffice for it:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一条线足矣：
- en: '[PRE15]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Being experienced with the platform we want to see the profit or loss after
    a buy/sell cycle, with and without commission.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 由于对该平台有经验，我们想要在买入/卖出周期之后看到利润或损失，有无佣金都行。
- en: '[PRE16]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'After the execution the output is:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后的输出如下：
- en: '[PRE17]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: God Save the Queen!!! The system still made money.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 上帝保佑女王!!! 系统仍然赚了钱。
- en: 'Before moving on, let’s notice something by filtering the “OPERATION PROFIT”
    lines:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，让我们通过过滤“OPERATION PROFIT”行来注意一些事情：
- en: '[PRE18]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Adding up the “NET” profits the final figure is:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 加总“净”利润，最终数字是：
- en: '[PRE19]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'But the system said the following at the end:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 但系统在最后说了以下内容：
- en: '[PRE20]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: And obviously *15.83* is not *16.98*. There is no error whatsoever. The “NET”
    profit of *15.83* is already cash in the bag.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 显然*15.83*不等于*16.98*。没有任何错误。*15.83*的“净”利润已经到手了。
- en: Unfortunately (or fortunately to better understand the platform) there is an
    open position on the last day of the *Data Feed*. Even if a SELL operation has
    been sent … IT HAS NOT YET BEEN EXECUTED.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是（或者幸运的是，为了更好地了解平台），在*Data Feed*的最后一天仍然有一个未平仓的头寸。即使已发送了一个卖出操作……但尚未执行。
- en: 'The “Final Portfolio Value” calculated by the broker takes into account the
    “Close” price on 2000-12-29\. The actual execution price would have been set on
    the next trading day which happened to be 2001-01-02\. Extending the *Data Feed*”
    to take into account this day the output is:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 经纪人计算的“最终投资组合价值”考虑了 2000-12-29 的“收盘”价格。实际执行价格将在下一个交易日设定，恰好是 2001-01-02。扩展 *数据源*”以考虑这一天的输出为：
- en: '[PRE21]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now adding the previous NET profit to the completed operation’s net profit:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将之前的净利润添加到已完成操作的净利润中：
- en: '[PRE22]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Which (discarding rounding errors in the “print” statements) is the extra Portfolio
    above the initial 100000 monetary units the strategy started with.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 这样（忽略“print”语句中的四舍五入误差），策略开始时额外的投资组合超过了初始的 100000 货币单位。
- en: 'Customizing the Strategy: Parameters'
  id: totrans-128
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自定义策略：参数
- en: It would a bit unpractical to hardcode some of the values in the strategy and
    have no chance to change them easily. *Parameters* come in handy to help.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在策略中硬编码某些值并且没有机会轻松更改它们会有些不方便。*参数* 可以帮助解决这个问题。
- en: 'Definition of parameters is easy and looks like:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 参数的定义很容易，如下所示：
- en: '[PRE23]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Being this a standard Python tuple with some tuples inside it, the following
    may look more appealling to some:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个标准的 Python 元组，其中包含一些元组，下面的代码可能更吸引人：
- en: '[PRE24]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'With either formatting parametrization of the strategy is allowed when adding
    the strategy to the Cerebro engine:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在向 Cerebro 引擎添加策略时，允许使用任一格式化参数设置策略：
- en: '[PRE25]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: Note
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 注
- en: 'The `setsizing` method below is deprecated. This content is kept here for anyone
    looking at old samples of the sources. The sources have been update to use:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的 `setsizing` 方法已被弃用。此内容保留在此处供查看旧源代码的人使用。源代码已更新为使用：
- en: '[PRE26]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '`# Set the sizer stake from the params'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 从参数设置 sizer stake'
- en: self.sizer.setsizing(self.params.stake)`
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: self.sizer.setsizing(self.params.stake)`
- en: '[PRE28]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '`# Already in the market ... we might sell'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 已经在市场上……我们可能会出售'
- en: if len(self) >= (self.bar_executed + self.params.exitbars):`
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: if len(self) >= (self.bar_executed + self.params.exitbars):`
- en: '[PRE29]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '`from __future__ import (absolute_import, division, print_function,'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`from __future__ import (absolute_import, division, print_function,'
- en: unicode_literals)
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: unicode_literals)
- en: 'import datetime  # For datetime objects'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '导入 datetime  # 用于日期时间对象'
- en: 'import os.path  # To manage paths'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '导入 os.path  # 用于管理路径'
- en: 'import sys  # To find out the script name (in argv[0])'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '导入 sys  # 用于查找脚本名称（在 argv[0] 中）'
- en: Import the backtrader platform
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入 backtrader 平台
- en: import backtrader as bt
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 导入 backtrader as bt
- en: Create a Stratey
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建策略
- en: 'class TestStrategy(bt.Strategy):'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 'class TestStrategy(bt.Strategy):'
- en: params = (
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: params = (
- en: ('exitbars', 5),
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ('exitbars', 5),
- en: )
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: )
- en: 'def log(self, txt, dt=None):'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def log(self, txt, dt=None):'
- en: ''''''' Logging function fot this strategy'''''''
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: ''''''' 该策略的日志记录函数'''''''
- en: dt = dt or self.datas[0].datetime.date(0)
  id: totrans-160
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dt = dt or self.datas[0].datetime.date(0)
- en: print('%s, %s' % (dt.isoformat(), txt))
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print('%s, %s' % (dt.isoformat(), txt))
- en: 'def __init__(self):'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def __init__(self):'
- en: Keep a reference to the "close" line in the data[0] dataseries
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持对数据[0] 数据系列中的 “close” 行的引用
- en: self.dataclose = self.datas[0].close
  id: totrans-164
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.dataclose = self.datas[0].close
- en: To keep track of pending orders and buy price/commission
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪未决订单、购买价格/佣金
- en: self.order = None
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: self.buyprice = None
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = None
- en: self.buycomm = None
  id: totrans-168
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = None
- en: 'def notify_order(self, order):'
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_order(self, order):'
- en: 'if order.status in [order.Submitted, order.Accepted]:'
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Submitted, order.Accepted]:'
- en: Buy/Sell order submitted/accepted to/by broker - Nothing to do
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 由经纪人提交/接受的购买/卖出订单 - 无需操作
- en: return
  id: totrans-172
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if an order has been completed
  id: totrans-173
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查订单是否已完成
- en: 'Attention: broker could reject order if not enough cash'
  id: totrans-174
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注意：如果资金不足，经纪人可能会拒绝订单
- en: 'if order.status in [order.Completed]:'
  id: totrans-175
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Completed]:'
- en: 'if order.isbuy():'
  id: totrans-176
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.isbuy():'
- en: self.log(
  id: totrans-177
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log(
- en: '''BUY EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-178
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '''已执行购买，价格：%.2f，成本：%.2f，佣金：%.2f'' %'
- en: (order.executed.price,
  id: totrans-179
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-180
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-181
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.buyprice = order.executed.price
  id: totrans-182
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = order.executed.price
- en: self.buycomm = order.executed.comm
  id: totrans-183
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = order.executed.comm
- en: 'else:  # Sell'
  id: totrans-184
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'else:  # 卖出'
- en: 'self.log(''SELL EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-185
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('卖出执行，价格：%.2f，成本：%.2f，佣金：%.2f' %
- en: (order.executed.price,
  id: totrans-186
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-187
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-188
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.bar_executed = len(self)
  id: totrans-189
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.bar_executed = len(self)
- en: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
  id: totrans-190
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
- en: self.log('Order Canceled/Margin/Rejected')
  id: totrans-191
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('订单已取消/保证金/拒绝')
- en: self.order = None
  id: totrans-192
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: 'def notify_trade(self, trade):'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_trade(self, trade):'
- en: 'if not trade.isclosed:'
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if not trade.isclosed:'
- en: return
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: self.log('OPERATION PROFIT, GROSS %.2f, NET %.2f' %
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('操作利润，总额：%.2f，净额：%.2f' %
- en: (trade.pnl, trade.pnlcomm))
  id: totrans-197
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (trade.pnl, trade.pnlcomm))
- en: 'def next(self):'
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def next(self):'
- en: Simply log the closing price of the series from the reference
  id: totrans-199
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单记录参考系列的收盘价格
- en: self.log('Close, %.2f' % self.dataclose[0])
  id: totrans-200
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('关闭, %.2f' % self.dataclose[0])
- en: Check if an order is pending ... if yes, we cannot send a 2nd one
  id: totrans-201
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查订单是否挂起 ... 如果是，则不能发送第二个订单
- en: 'if self.order:'
  id: totrans-202
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.order:'
- en: return
  id: totrans-203
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if we are in the market
  id: totrans-204
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查我们是否在市场中
- en: 'if not self.position:'
  id: totrans-205
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if not self.position:'
- en: Not yet ... we MIGHT BUY if ...
  id: totrans-206
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还没有...如果...我们可能会购买
- en: 'if self.dataclose[0] < self.dataclose[-1]:'
  id: totrans-207
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.dataclose[0] < self.dataclose[-1]:'
- en: current close less than previous close
  id: totrans-208
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当前收盘价低于上一个收盘价
- en: 'if self.dataclose[-1] < self.dataclose[-2]:'
  id: totrans-209
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.dataclose[-1] < self.dataclose[-2]:'
- en: previous close less than the previous close
  id: totrans-210
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 上一个收盘价低于上一个收盘价
- en: BUY, BUY, BUY!!! (with default parameters)
  id: totrans-211
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 购买, 购买, 购买!!! (使用默认参数)
- en: self.log('BUY CREATE, %.2f' % self.dataclose[0])
  id: totrans-212
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('购买创建, %.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-213
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪已创建的订单以避免第二次下单
- en: self.order = self.buy()
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.buy()
- en: 'else:'
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'else:'
- en: Already in the market ... we might sell
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 已在市场中...我们可能会出售
- en: 'if len(self) >= (self.bar_executed + self.params.exitbars):'
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if len(self) >= (self.bar_executed + self.params.exitbars):'
- en: SELL, SELL, SELL!!! (with all possible default parameters)
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卖出, 卖出, 卖出!!! (使用所有可能的默认参数)
- en: self.log('SELL CREATE, %.2f' % self.dataclose[0])
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('卖出创建, %.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-220
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪已创建的订单以避免第二次下单
- en: self.order = self.sell()
  id: totrans-221
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.sell()
- en: 'if __name__ == ''__main__'':'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 'if __name__ == ''__main__'':'
- en: Create a cerebro entity
  id: totrans-223
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 cerebro 实体
- en: cerebro = bt.Cerebro()
  id: totrans-224
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro = bt.Cerebro()
- en: Add a strategy
  id: totrans-225
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一种策略
- en: cerebro.addstrategy(TestStrategy)
  id: totrans-226
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.addstrategy(TestStrategy)
- en: Datas are in a subfolder of the samples. Need to find where the script is
  id: totrans-227
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据位于样本的子文件夹中。需要找到脚本所在的位置
- en: because it could have been called from anywhere
  id: totrans-228
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 因为它可能被从任何地方调用
- en: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
  id: totrans-229
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
- en: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
  id: totrans-230
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
- en: Create a Data Feed
  id: totrans-231
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建数据源
- en: data = bt.feeds.YahooFinanceCSVData(
  id: totrans-232
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data = bt.feeds.YahooFinanceCSVData(
- en: dataname=datapath,
  id: totrans-233
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dataname=datapath,
- en: Do not pass values before this date
  id: totrans-234
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要在此日期之前传递值
- en: fromdate=datetime.datetime(2000, 1, 1),
  id: totrans-235
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: fromdate=datetime.datetime(2000, 1, 1),
- en: Do not pass values before this date
  id: totrans-236
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要在此日期之前传递值
- en: todate=datetime.datetime(2000, 12, 31),
  id: totrans-237
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: todate=datetime.datetime(2000, 12, 31),
- en: Do not pass values after this date
  id: totrans-238
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要在此日期之后传递值
- en: reverse=False)
  id: totrans-239
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: reverse=False)
- en: Add the Data Feed to Cerebro
  id: totrans-240
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据源添加到 Cerebro
- en: cerebro.adddata(data)
  id: totrans-241
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.adddata(data)
- en: Set our desired cash start
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们想要的现金起始值
- en: cerebro.broker.setcash(100000.0)
  id: totrans-243
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcash(100000.0)
- en: Add a FixedSize sizer according to the stake
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据股份添加一个固定大小的 sizer
- en: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
- en: Set the commission - 0.1% ... divide by 100 to remove the %
  id: totrans-246
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置佣金 - 0.1% ... 除以 100 移除 %
- en: cerebro.broker.setcommission(commission=0.001)
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcommission(commission=0.001)
- en: Print out the starting conditions
  id: totrans-248
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印出起始条件
- en: 'print(''Starting Portfolio Value: %.2f'' % cerebro.broker.getvalue())'
  id: totrans-249
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'print(''起始投资组合价值: %.2f'' % cerebro.broker.getvalue())'
- en: Run over everything
  id: totrans-250
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行全部内容
- en: cerebro.run()
  id: totrans-251
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.run()
- en: Print out the final result
  id: totrans-252
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印出最终结果
- en: 'print(''Final Portfolio Value: %.2f'' % cerebro.broker.getvalue())`'
  id: totrans-253
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'print(''最终投资组合价值: %.2f'' % cerebro.broker.getvalue())`'
- en: '[PRE30]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '`Starting Portfolio Value: 100000.00'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`起始投资组合价值: 100000.00'
- en: 2000-01-03T00:00:00, Close, 27.85
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-03T00:00:00, 关闭, 27.85
- en: 2000-01-04T00:00:00, Close, 25.39
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-04T00:00:00, 关闭, 25.39
- en: 2000-01-05T00:00:00, Close, 24.05
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-05T00:00:00, 关闭, 24.05
- en: 2000-01-05T00:00:00, BUY CREATE, 24.05
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-05T00:00:00, 创建购买, 24.05
- en: '2000-01-06T00:00:00, BUY EXECUTED, Size 10, Price: 23.61, Cost: 236.10, Commission
    0.24'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '2000-01-06T00:00:00, 购买已执行, 数量 10, 价格: 23.61, 成本: 236.10, 佣金 0.24'
- en: 2000-01-06T00:00:00, Close, 22.63
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-06T00:00:00, 关闭, 22.63
- en: '...'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '...'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '...'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: 2000-12-20T00:00:00, BUY CREATE, 26.88
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-20T00:00:00, 创建购买, 26.88
- en: '2000-12-21T00:00:00, BUY EXECUTED, Size 10, Price: 26.23, Cost: 262.30, Commission
    0.26'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '2000-12-21T00:00:00, 购买已执行, 数量 10, 价格: 26.23, 成本: 262.30, 佣金 0.26'
- en: 2000-12-21T00:00:00, Close, 27.82
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-21T00:00:00, 关闭, 27.82
- en: 2000-12-22T00:00:00, Close, 30.06
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-22T00:00:00, 关闭, 30.06
- en: 2000-12-26T00:00:00, Close, 29.17
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-26T00:00:00, 关闭, 29.17
- en: 2000-12-27T00:00:00, Close, 28.94
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-27T00:00:00, 关闭, 28.94
- en: 2000-12-28T00:00:00, Close, 29.29
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-28T00:00:00, 关闭, 29.29
- en: 2000-12-29T00:00:00, Close, 27.41
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29T00:00:00, 关闭, 27.41
- en: 2000-12-29T00:00:00, SELL CREATE, 27.41
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29T00:00:00, 创建卖出, 27.41
- en: 'Final Portfolio Value: 100169.80`'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '最终投资组合价值: 100169.80`'
- en: '[PRE31]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '`self.sma = bt.indicators.MovingAverageSimple(self.datas[0], period=self.params.maperiod)`'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`self.sma = bt.indicators.MovingAverageSimple(self.datas[0], period=self.params.maperiod)`'
- en: '[PRE32]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '`from __future__ import (absolute_import, division, print_function,'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`from __future__ import (absolute_import, division, print_function,'
- en: unicode_literals)
  id: totrans-279
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: unicode_literals)
- en: 'import datetime  # For datetime objects'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 'import datetime  # 用于日期时间对象'
- en: 'import os.path  # To manage paths'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 'import os.path  # 用于管理路径'
- en: 'import sys  # To find out the script name (in argv[0])'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 'import sys  # 用于查找脚本名称（在 argv[0] 中）'
- en: Import the backtrader platform
  id: totrans-283
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入 backtrader 平台
- en: import backtrader as bt
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: import backtrader as bt
- en: Create a Stratey
  id: totrans-285
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个策略
- en: 'class TestStrategy(bt.Strategy):'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 'class TestStrategy(bt.Strategy):'
- en: params = (
  id: totrans-287
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 参数 = (
- en: ('maperiod', 15),
  id: totrans-288
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ('maperiod', 15),
- en: )
  id: totrans-289
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: )
- en: 'def log(self, txt, dt=None):'
  id: totrans-290
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def log(self, txt, dt=None):'
- en: ''''''' Logging function fot this strategy'''''''
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '''''''此策略的日志记录函数'''''''
- en: dt = dt or self.datas[0].datetime.date(0)
  id: totrans-292
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dt = dt or self.datas[0].datetime.date(0)
- en: print('%s, %s' % (dt.isoformat(), txt))
  id: totrans-293
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print('%s，%s' % (dt.isoformat(), txt))
- en: 'def __init__(self):'
  id: totrans-294
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def __init__(self):'
- en: Keep a reference to the "close" line in the data[0] dataseries
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保留对数据[0] 数据系列中的“close”线的引用
- en: self.dataclose = self.datas[0].close
  id: totrans-296
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.dataclose = self.datas[0].close
- en: To keep track of pending orders and buy price/commission
  id: totrans-297
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪待定订单以及购买价格/佣金
- en: self.order = None
  id: totrans-298
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: self.buyprice = None
  id: totrans-299
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = None
- en: self.buycomm = None
  id: totrans-300
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = None
- en: Add a MovingAverageSimple indicator
  id: totrans-301
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个 MovingAverageSimple 指标
- en: self.sma = bt.indicators.SimpleMovingAverage(
  id: totrans-302
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.sma = bt.indicators.SimpleMovingAverage(
- en: self.datas[0], period=self.params.maperiod)
  id: totrans-303
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.datas[0], period=self.params.maperiod)
- en: 'def notify_order(self, order):'
  id: totrans-304
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_order(self, order):'
- en: 'if order.status in [order.Submitted, order.Accepted]:'
  id: totrans-305
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Submitted, order.Accepted]:'
- en: Buy/Sell order submitted/accepted to/by broker - Nothing to do
  id: totrans-306
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 购买/卖出订单提交/接受给/由经纪人-无需操作
- en: return
  id: totrans-307
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if an order has been completed
  id: totrans-308
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查订单是否已完成
- en: 'Attention: broker could reject order if not enough cash'
  id: totrans-309
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注意：如果现金不足，经纪人可能会拒绝订单
- en: 'if order.status in [order.Completed]:'
  id: totrans-310
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Completed]:'
- en: 'if order.isbuy():'
  id: totrans-311
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.isbuy():'
- en: self.log(
  id: totrans-312
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log(
- en: '''BUY EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-313
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '''购买执行，价格：%.2f，成本：%.2f，佣金%.2f'' %'
- en: (order.executed.price,
  id: totrans-314
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-315
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-316
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.buyprice = order.executed.price
  id: totrans-317
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = order.executed.price
- en: self.buycomm = order.executed.comm
  id: totrans-318
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = order.executed.comm
- en: 'else:  # Sell'
  id: totrans-319
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'else:  # 卖出'
- en: 'self.log(''SELL EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-320
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('卖出执行，价格：%.2f，成本：%.2f，佣金%.2f' %
- en: (order.executed.price,
  id: totrans-321
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-322
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-323
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.bar_executed = len(self)
  id: totrans-324
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.bar_executed = len(self)
- en: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
  id: totrans-325
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
- en: self.log('Order Canceled/Margin/Rejected')
  id: totrans-326
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('订单已取消/保证金/拒绝')
- en: self.order = None
  id: totrans-327
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: 'def notify_trade(self, trade):'
  id: totrans-328
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_trade(self, trade):'
- en: 'if not trade.isclosed:'
  id: totrans-329
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if not trade.isclosed:'
- en: return
  id: totrans-330
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: self.log('OPERATION PROFIT, GROSS %.2f, NET %.2f' %
  id: totrans-331
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('操作利润，总%.2f，净%.2f' %
- en: (trade.pnl, trade.pnlcomm))
  id: totrans-332
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (trade.pnl, trade.pnlcomm))
- en: 'def next(self):'
  id: totrans-333
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def next(self):'
- en: Simply log the closing price of the series from the reference
  id: totrans-334
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仅记录来自参考系列的收盘价
- en: self.log('Close, %.2f' % self.dataclose[0])
  id: totrans-335
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('关闭，%.2f' % self.dataclose[0])
- en: Check if an order is pending ... if yes, we cannot send a 2nd one
  id: totrans-336
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查订单是否待定... 如果是，我们不能发送第二个订单
- en: 'if self.order:'
  id: totrans-337
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.order:'
- en: return
  id: totrans-338
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if we are in the market
  id: totrans-339
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查我们是否在市场中
- en: 'if not self.position:'
  id: totrans-340
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if not self.position:'
- en: Not yet ... we MIGHT BUY if ...
  id: totrans-341
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还没有...如果...，我们可能会买
- en: 'if self.dataclose[0] > self.sma[0]:'
  id: totrans-342
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.dataclose[0] > self.sma[0]:'
- en: BUY, BUY, BUY!!! (with all possible default parameters)
  id: totrans-343
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 买，买，买!!! （具有所有可能的默认参数）
- en: self.log('BUY CREATE, %.2f' % self.dataclose[0])
  id: totrans-344
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('购买创建，%.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-345
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪创建的订单，以避免第二个订单
- en: self.order = self.buy()
  id: totrans-346
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.buy()
- en: 'else:'
  id: totrans-347
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'else:'
- en: 'if self.dataclose[0] < self.sma[0]:'
  id: totrans-348
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.dataclose[0] < self.sma[0]:'
- en: SELL, SELL, SELL!!! (with all possible default parameters)
  id: totrans-349
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卖，卖，卖!!! （具有所有可能的默认参数）
- en: self.log('SELL CREATE, %.2f' % self.dataclose[0])
  id: totrans-350
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('卖出创建，%.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-351
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪创建的订单，以避免第二个订单
- en: self.order = self.sell()
  id: totrans-352
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.sell()
- en: 'if __name__ == ''__main__'':'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
  zh: 'if __name__ == ''__main__'':'
- en: Create a cerebro entity
  id: totrans-354
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 cerebro 实体
- en: cerebro = bt.Cerebro()
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro = bt.Cerebro()
- en: Add a strategy
  id: totrans-356
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个策略
- en: cerebro.addstrategy(TestStrategy)
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.addstrategy(TestStrategy)
- en: Datas are in a subfolder of the samples. Need to find where the script is
  id: totrans-358
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据位于示例的子文件夹中。 需要找出脚本所在的位置
- en: because it could have been called from anywhere
  id: totrans-359
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 因为它可能从任何地方调用
- en: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
- en: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
- en: Create a Data Feed
  id: totrans-362
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个数据源
- en: data = bt.feeds.YahooFinanceCSVData(
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data = bt.feeds.YahooFinanceCSVData(
- en: dataname=datapath,
  id: totrans-364
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dataname=datapath,
- en: Do not pass values before this date
  id: totrans-365
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要传递此日期之前的值
- en: fromdate=datetime.datetime(2000, 1, 1),
  id: totrans-366
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: fromdate=datetime.datetime(2000, 1, 1),
- en: Do not pass values before this date
  id: totrans-367
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要传递此日期之前的值
- en: todate=datetime.datetime(2000, 12, 31),
  id: totrans-368
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: todate=datetime.datetime(2000, 12, 31),
- en: Do not pass values after this date
  id: totrans-369
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要传递此日期之后的值
- en: reverse=False)
  id: totrans-370
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: reverse=False)
- en: Add the Data Feed to Cerebro
  id: totrans-371
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加数据源到 Cerebro
- en: cerebro.adddata(data)
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.adddata(data)
- en: Set our desired cash start
  id: totrans-373
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们所需的初始现金
- en: cerebro.broker.setcash(1000.0)
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcash(1000.0)
- en: Add a FixedSize sizer according to the stake
  id: totrans-375
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个固定大小的 Sizer 根据股票份额
- en: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
- en: Set the commission
  id: totrans-377
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置佣金
- en: cerebro.broker.setcommission(commission=0.0)
  id: totrans-378
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcommission(commission=0.0)
- en: Print out the starting conditions
  id: totrans-379
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印初始条件
- en: 'print(''Starting Portfolio Value: %.2f'' % cerebro.broker.getvalue())'
  id: totrans-380
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'print(''起始组合价值: %.2f'' % cerebro.broker.getvalue())'
- en: Run over everything
  id: totrans-381
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 遍历所有操作
- en: cerebro.run()
  id: totrans-382
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.run()
- en: Print out the final result
  id: totrans-383
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印最终结果
- en: 'print(''Final Portfolio Value: %.2f'' % cerebro.broker.getvalue())`'
  id: totrans-384
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'print(''最终组合价值: %.2f'' % cerebro.broker.getvalue())`'
- en: '[PRE33]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '`Starting Portfolio Value: 1000.00'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: '`Starting Portfolio Value: 1000.00'
- en: 2000-01-24T00:00:00, Close, 25.55
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-24T00:00:00, 收盘价, 25.55
- en: 2000-01-25T00:00:00, Close, 26.61
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-25T00:00:00, 收盘价, 26.61
- en: 2000-01-25T00:00:00, BUY CREATE, 26.61
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-25T00:00:00, 买入信号, 26.61
- en: '2000-01-26T00:00:00, BUY EXECUTED, Size 10, Price: 26.76, Cost: 267.60, Commission
    0.00'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
  zh: '2000-01-26T00:00:00, 买入执行, 数量 10, 价格: 26.76, 成本: 267.60, 手续费 0.00'
- en: 2000-01-26T00:00:00, Close, 25.96
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-26T00:00:00, 收盘价, 25.96
- en: 2000-01-27T00:00:00, Close, 24.43
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-27T00:00:00, 收盘价, 24.43
- en: 2000-01-27T00:00:00, SELL CREATE, 24.43
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-27T00:00:00, 卖出信号, 24.43
- en: '2000-01-28T00:00:00, SELL EXECUTED, Size 10, Price: 24.28, Cost: 242.80, Commission
    0.00'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: '2000-01-28T00:00:00, 卖出执行, 数量 10, 价格: 24.28, 成本: 242.80, 手续费 0.00'
- en: 2000-01-28T00:00:00, OPERATION PROFIT, GROSS -24.80, NET -24.80
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-28T00:00:00, 操作盈利, 总额 -24.80, 净额 -24.80
- en: 2000-01-28T00:00:00, Close, 22.34
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-28T00:00:00, 收盘价, 22.34
- en: 2000-01-31T00:00:00, Close, 23.55
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-01-31T00:00:00, 收盘价, 23.55
- en: 2000-02-01T00:00:00, Close, 25.46
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-01T00:00:00, 收盘价, 25.46
- en: 2000-02-02T00:00:00, Close, 25.61
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-02T00:00:00, 收盘价, 25.61
- en: 2000-02-02T00:00:00, BUY CREATE, 25.61
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-02T00:00:00, 买入信号, 25.61
- en: '2000-02-03T00:00:00, BUY EXECUTED, Size 10, Price: 26.11, Cost: 261.10, Commission
    0.00'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: '2000-02-03T00:00:00, 买入执行, 数量 10, 价格: 26.11, 成本: 261.10, 手续费 0.00'
- en: '...'
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '...'
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '...'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: 2000-12-20T00:00:00, SELL CREATE, 26.88
  id: totrans-405
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-20T00:00:00, 卖出信号, 26.88
- en: '2000-12-21T00:00:00, SELL EXECUTED, Size 10, Price: 26.23, Cost: 262.30, Commission
    0.00'
  id: totrans-406
  prefs: []
  type: TYPE_NORMAL
  zh: '2000-12-21T00:00:00, 卖出执行, 数量 10, 价格: 26.23, 成本: 262.30, 手续费 0.00'
- en: 2000-12-21T00:00:00, OPERATION PROFIT, GROSS -20.60, NET -20.60
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-21T00:00:00, 操作盈利, 总额 -20.60, 净额 -20.60
- en: 2000-12-21T00:00:00, Close, 27.82
  id: totrans-408
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-21T00:00:00, 收盘价, 27.82
- en: 2000-12-21T00:00:00, BUY CREATE, 27.82
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-21T00:00:00, 买入信号, 27.82
- en: '2000-12-22T00:00:00, BUY EXECUTED, Size 10, Price: 28.65, Cost: 286.50, Commission
    0.00'
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: '2000-12-22T00:00:00, 买入执行, 数量 10, 价格: 28.65, 成本: 286.50, 手续费 0.00'
- en: 2000-12-22T00:00:00, Close, 30.06
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-22T00:00:00, 收盘价, 30.06
- en: 2000-12-26T00:00:00, Close, 29.17
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-26T00:00:00, 收盘价, 29.17
- en: 2000-12-27T00:00:00, Close, 28.94
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-27T00:00:00, 收盘价, 28.94
- en: 2000-12-28T00:00:00, Close, 29.29
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-28T00:00:00, 收盘价, 29.29
- en: 2000-12-29T00:00:00, Close, 27.41
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29T00:00:00, 收盘价, 27.41
- en: 2000-12-29T00:00:00, SELL CREATE, 27.41
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29T00:00:00, 卖出信号, 27.41
- en: 'Final Portfolio Value: 973.90`'
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '最终组合价值: 973.90`'
- en: '[PRE34]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '`cerebro.plot()`'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: '`cerebro.plot()`'
- en: '[PRE35]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '`# Indicators for the plotting show'
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: '`# 绘图显示的指标'
- en: bt.indicators.ExponentialMovingAverage(self.datas[0], period=25)
  id: totrans-422
  prefs: []
  type: TYPE_NORMAL
  zh: bt.indicators.ExponentialMovingAverage(self.datas[0], period=25)
- en: bt.indicators.WeightedMovingAverage(self.datas[0], period=25).subplot = True
  id: totrans-423
  prefs: []
  type: TYPE_NORMAL
  zh: bt.indicators.WeightedMovingAverage(self.datas[0], period=25).subplot = True
- en: bt.indicators.StochasticSlow(self.datas[0])
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: bt.indicators.StochasticSlow(self.datas[0])
- en: bt.indicators.MACDHisto(self.datas[0])
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: bt.indicators.MACDHisto(self.datas[0])
- en: rsi = bt.indicators.RSI(self.datas[0])
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: rsi = bt.indicators.RSI(self.datas[0])
- en: bt.indicators.SmoothedMovingAverage(rsi, period=10)
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: bt.indicators.SmoothedMovingAverage(rsi, period=10)
- en: bt.indicators.ATR(self.datas[0]).plot = False`
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: bt.indicators.ATR(self.datas[0]).plot = False`
- en: '[PRE36]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '`from __future__ import (absolute_import, division, print_function,'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '`from __future__ import (absolute_import, division, print_function,'
- en: unicode_literals)
  id: totrans-431
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: unicode_literals)
- en: 'import datetime  # For datetime objects'
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 'import datetime  # 用于日期对象'
- en: 'import os.path  # To manage paths'
  id: totrans-433
  prefs: []
  type: TYPE_NORMAL
  zh: 'import os.path  # 用于管理路径'
- en: 'import sys  # To find out the script name (in argv[0])'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 'import sys  # 用于查找脚本名称（在 argv[0] 中）'
- en: Import the backtrader platform
  id: totrans-435
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入 backtrader 平台
- en: import backtrader as bt
  id: totrans-436
  prefs: []
  type: TYPE_NORMAL
  zh: import backtrader as bt
- en: Create a Stratey
  id: totrans-437
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建策略
- en: 'class TestStrategy(bt.Strategy):'
  id: totrans-438
  prefs: []
  type: TYPE_NORMAL
  zh: 'class TestStrategy(bt.Strategy):'
- en: params = (
  id: totrans-439
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: params = (
- en: ('maperiod', 15),
  id: totrans-440
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ('maperiod', 15),
- en: )
  id: totrans-441
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: )
- en: 'def log(self, txt, dt=None):'
  id: totrans-442
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def log(self, txt, dt=None):'
- en: ''''''' Logging function fot this strategy'''''''
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: ''''''' 此策略的日志函数'''''''
- en: dt = dt or self.datas[0].datetime.date(0)
  id: totrans-444
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dt = dt or self.datas[0].datetime.date(0)
- en: print('%s, %s' % (dt.isoformat(), txt))
  id: totrans-445
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print('%s, %s' % (dt.isoformat(), txt))
- en: 'def __init__(self):'
  id: totrans-446
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def __init__(self):'
- en: Keep a reference to the "close" line in the data[0] dataseries
  id: totrans-447
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持对数据[0] 数据系列中的 "close" 线的引用
- en: self.dataclose = self.datas[0].close
  id: totrans-448
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.dataclose = self.datas[0].close
- en: To keep track of pending orders and buy price/commission
  id: totrans-449
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了跟踪待处理的订单和买入价格/佣金
- en: self.order = None
  id: totrans-450
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: self.buyprice = None
  id: totrans-451
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = None
- en: self.buycomm = None
  id: totrans-452
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = None
- en: Add a MovingAverageSimple indicator
  id: totrans-453
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个 MovingAverageSimple 指标
- en: self.sma = bt.indicators.SimpleMovingAverage(
  id: totrans-454
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.sma = bt.indicators.SimpleMovingAverage(
- en: self.datas[0], period=self.params.maperiod)
  id: totrans-455
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.datas[0], period=self.params.maperiod)
- en: Indicators for the plotting show
  id: totrans-456
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用于绘图的指标
- en: bt.indicators.ExponentialMovingAverage(self.datas[0], period=25)
  id: totrans-457
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: bt.indicators.ExponentialMovingAverage(self.datas[0], period=25)
- en: bt.indicators.WeightedMovingAverage(self.datas[0], period=25,
  id: totrans-458
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: bt.indicators.WeightedMovingAverage(self.datas[0], period=25,
- en: subplot=True)
  id: totrans-459
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: subplot=True)
- en: bt.indicators.StochasticSlow(self.datas[0])
  id: totrans-460
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: bt.indicators.StochasticSlow(self.datas[0])
- en: bt.indicators.MACDHisto(self.datas[0])
  id: totrans-461
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: bt.indicators.MACDHisto(self.datas[0])
- en: rsi = bt.indicators.RSI(self.datas[0])
  id: totrans-462
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: rsi = bt.indicators.RSI(self.datas[0])
- en: bt.indicators.SmoothedMovingAverage(rsi, period=10)
  id: totrans-463
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: bt.indicators.SmoothedMovingAverage(rsi, period=10)
- en: bt.indicators.ATR(self.datas[0], plot=False)
  id: totrans-464
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: bt.indicators.ATR(self.datas[0], plot=False)
- en: 'def notify_order(self, order):'
  id: totrans-465
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_order(self, order):'
- en: 'if order.status in [order.Submitted, order.Accepted]:'
  id: totrans-466
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Submitted, order.Accepted]:'
- en: Buy/Sell order submitted/accepted to/by broker - Nothing to do
  id: totrans-467
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提交/接受到/由经纪人的买入/卖出订单 - 无需操作
- en: return
  id: totrans-468
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if an order has been completed
  id: totrans-469
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查订单是否已完成
- en: 'Attention: broker could reject order if not enough cash'
  id: totrans-470
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: '注意: 如果资金不足，经纪人可能会拒绝订单'
- en: 'if order.status in [order.Completed]:'
  id: totrans-471
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Completed]:'
- en: 'if order.isbuy():'
  id: totrans-472
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.isbuy():'
- en: self.log(
  id: totrans-473
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log(
- en: '''BUY EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-474
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '''买入执行, 价格: %.2f, 成本: %.2f, 佣金 %.2f'' %'
- en: (order.executed.price,
  id: totrans-475
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-476
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-477
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.buyprice = order.executed.price
  id: totrans-478
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = order.executed.price
- en: self.buycomm = order.executed.comm
  id: totrans-479
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = order.executed.comm
- en: 'else:  # Sell'
  id: totrans-480
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'else:  # 卖出'
- en: 'self.log(''SELL EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-481
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'self.log(''卖出执行, 价格: %.2f, 成本: %.2f, 佣金 %.2f'' %'
- en: (order.executed.price,
  id: totrans-482
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-483
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-484
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.bar_executed = len(self)
  id: totrans-485
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.bar_executed = len(self)
- en: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
  id: totrans-486
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
- en: self.log('Order Canceled/Margin/Rejected')
  id: totrans-487
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('订单取消/保证金/拒绝')
- en: 'Write down: no pending order'
  id: totrans-488
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 写下：没有待处理的订单
- en: self.order = None
  id: totrans-489
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: 'def notify_trade(self, trade):'
  id: totrans-490
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_trade(self, trade):'
- en: 'if not trade.isclosed:'
  id: totrans-491
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if not trade.isclosed:'
- en: return
  id: totrans-492
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: self.log('OPERATION PROFIT, GROSS %.2f, NET %.2f' %
  id: totrans-493
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('操作利润, 总额 %.2f, 净额 %.2f' %
- en: (trade.pnl, trade.pnlcomm))
  id: totrans-494
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (trade.pnl, trade.pnlcomm))
- en: 'def next(self):'
  id: totrans-495
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def next(self):'
- en: Simply log the closing price of the series from the reference
  id: totrans-496
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单记录来自参考系列的收盘价格
- en: self.log('Close, %.2f' % self.dataclose[0])
  id: totrans-497
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('关闭, %.2f' % self.dataclose[0])
- en: Check if an order is pending ... if yes, we cannot send a 2nd one
  id: totrans-498
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查订单是否待处理...如果是，我们不能发送第二个订单
- en: 'if self.order:'
  id: totrans-499
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.order:'
- en: return
  id: totrans-500
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if we are in the market
  id: totrans-501
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查我们是否在市场中
- en: 'if not self.position:'
  id: totrans-502
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if not self.position:'
- en: Not yet ... we MIGHT BUY if ...
  id: totrans-503
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还没有...如果...的话，我们可能会买入
- en: 'if self.dataclose[0] > self.sma[0]:'
  id: totrans-504
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果self.dataclose[0] > self.sma[0]:'
- en: BUY, BUY, BUY!!! (with all possible default parameters)
  id: totrans-505
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 买, 买, 买!!!（所有可能的默认参数）
- en: self.log('BUY CREATE, %.2f' % self.dataclose[0])
  id: totrans-506
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('买入创建, %.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-507
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪创建的订单以避免第二个订单
- en: self.order = self.buy()
  id: totrans-508
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.buy()
- en: 'else:'
  id: totrans-509
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '否则:'
- en: 'if self.dataclose[0] < self.sma[0]:'
  id: totrans-510
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果self.dataclose[0] < self.sma[0]:'
- en: SELL, SELL, SELL!!! (with all possible default parameters)
  id: totrans-511
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卖, 卖, 卖!!!（所有可能的默认参数）
- en: self.log('SELL CREATE, %.2f' % self.dataclose[0])
  id: totrans-512
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('卖出创建, %.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-513
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪创建的订单以避免第二个订单
- en: self.order = self.sell()
  id: totrans-514
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.sell()
- en: 'if __name__ == ''__main__'':'
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 'if __name__ == ''__main__'':'
- en: Create a cerebro entity
  id: totrans-516
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 cerebro 实体
- en: cerebro = bt.Cerebro()
  id: totrans-517
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro = bt.Cerebro()
- en: Add a strategy
  id: totrans-518
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个策略
- en: cerebro.addstrategy(TestStrategy)
  id: totrans-519
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.addstrategy(TestStrategy)
- en: Datas are in a subfolder of the samples. Need to find where the script is
  id: totrans-520
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据位于示例的子文件夹中。需要找到脚本所在的位置
- en: because it could have been called from anywhere
  id: totrans-521
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 因为它可能从任何地方调用
- en: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
  id: totrans-522
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
- en: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
  id: totrans-523
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
- en: Create a Data Feed
  id: totrans-524
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个数据源
- en: data = bt.feeds.YahooFinanceCSVData(
  id: totrans-525
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data = bt.feeds.YahooFinanceCSVData(
- en: dataname=datapath,
  id: totrans-526
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dataname=datapath,
- en: Do not pass values before this date
  id: totrans-527
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要在此日期之前传递值
- en: fromdate=datetime.datetime(2000, 1, 1),
  id: totrans-528
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: fromdate=datetime.datetime(2000, 1, 1),
- en: Do not pass values before this date
  id: totrans-529
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 请勿在此日期之前传递值
- en: todate=datetime.datetime(2000, 12, 31),
  id: totrans-530
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: todate=datetime.datetime(2000, 12, 31),
- en: Do not pass values after this date
  id: totrans-531
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 请勿在此日期之后传递值
- en: reverse=False)
  id: totrans-532
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: reverse=False)
- en: Add the Data Feed to Cerebro
  id: totrans-533
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加数据源到 Cerebro
- en: cerebro.adddata(data)
  id: totrans-534
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.adddata(data)
- en: Set our desired cash start
  id: totrans-535
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们期望的起始现金
- en: cerebro.broker.setcash(1000.0)
  id: totrans-536
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcash(1000.0)
- en: Add a FixedSize sizer according to the stake
  id: totrans-537
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据股份添加一个固定大小的 sizer
- en: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
  id: totrans-538
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
- en: Set the commission
  id: totrans-539
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置佣金
- en: cerebro.broker.setcommission(commission=0.0)
  id: totrans-540
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcommission(commission=0.0)
- en: Print out the starting conditions
  id: totrans-541
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印出起始条件
- en: 'print(''Starting Portfolio Value: %.2f'' % cerebro.broker.getvalue())'
  id: totrans-542
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'print(''Starting Portfolio Value: %.2f'' % cerebro.broker.getvalue())'
- en: Run over everything
  id: totrans-543
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在所有内容上运行
- en: cerebro.run()
  id: totrans-544
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.run()
- en: Print out the final result
  id: totrans-545
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 打印出最终结果
- en: 'print(''Final Portfolio Value: %.2f'' % cerebro.broker.getvalue())'
  id: totrans-546
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'print(''Final Portfolio Value: %.2f'' % cerebro.broker.getvalue())'
- en: Plot the result
  id: totrans-547
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制结果
- en: cerebro.plot()`
  id: totrans-548
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.plot()`
- en: '[PRE37]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '`Starting Portfolio Value: 1000.00'
  id: totrans-550
  prefs: []
  type: TYPE_NORMAL
  zh: '`起始投资组合价值：1000.00`'
- en: 2000-02-18T00:00:00, Close, 27.61
  id: totrans-551
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-18T00:00:00，收盘价，27.61
- en: 2000-02-22T00:00:00, Close, 27.97
  id: totrans-552
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-22T00:00:00，收盘价，27.97
- en: 2000-02-22T00:00:00, BUY CREATE, 27.97
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-22T00:00:00，买入创建，27.97
- en: '2000-02-23T00:00:00, BUY EXECUTED, Size 10, Price: 28.38, Cost: 283.80, Commission
    0.00'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-23T00:00:00，买入执行，数量 10，价格：28.38，成本：283.80，佣金 0.00
- en: 2000-02-23T00:00:00, Close, 29.73
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-02-23T00:00:00，收盘价，29.73
- en: '...'
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '...'
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: '...'
  id: totrans-558
  prefs: []
  type: TYPE_NORMAL
  zh: '...'
- en: 2000-12-21T00:00:00, BUY CREATE, 27.82
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-21T00:00:00，买入创建，27.82
- en: '2000-12-22T00:00:00, BUY EXECUTED, Size 10, Price: 28.65, Cost: 286.50, Commission
    0.00'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-22T00:00:00，买入执行，数量 10，价格：28.65，成本：286.50，佣金 0.00
- en: 2000-12-22T00:00:00, Close, 30.06
  id: totrans-561
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-22T00:00:00，收盘价，30.06
- en: 2000-12-26T00:00:00, Close, 29.17
  id: totrans-562
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-26T00:00:00，收盘价，29.17
- en: 2000-12-27T00:00:00, Close, 28.94
  id: totrans-563
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-27T00:00:00，收盘价，28.94
- en: 2000-12-28T00:00:00, Close, 29.29
  id: totrans-564
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-28T00:00:00，收盘价，29.29
- en: 2000-12-29T00:00:00, Close, 27.41
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29T00:00:00，收盘价，27.41
- en: 2000-12-29T00:00:00, SELL CREATE, 27.41
  id: totrans-566
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29T00:00:00，卖出创建，27.41
- en: 'Final Portfolio Value: 981.00`'
  id: totrans-567
  prefs: []
  type: TYPE_NORMAL
  zh: 最终投资组合价值：981.00`
- en: '[PRE38]'
  id: totrans-568
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '`from __future__ import (absolute_import, division, print_function,'
  id: totrans-569
  prefs: []
  type: TYPE_NORMAL
  zh: '`from __future__ import (absolute_import, division, print_function,`'
- en: unicode_literals)
  id: totrans-570
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: unicode_literals)
- en: 'import datetime  # For datetime objects'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 'import datetime  # 用于日期时间对象'
- en: 'import os.path  # To manage paths'
  id: totrans-572
  prefs: []
  type: TYPE_NORMAL
  zh: 'import os.path  # 用于管理路径'
- en: 'import sys  # To find out the script name (in argv[0])'
  id: totrans-573
  prefs: []
  type: TYPE_NORMAL
  zh: 'import sys  # 用于查找脚本名称（在 argv[0] 中）'
- en: Import the backtrader platform
  id: totrans-574
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入 backtrader 平台
- en: import backtrader as bt
  id: totrans-575
  prefs: []
  type: TYPE_NORMAL
  zh: import backtrader as bt
- en: Create a Stratey
  id: totrans-576
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个策略
- en: 'class TestStrategy(bt.Strategy):'
  id: totrans-577
  prefs: []
  type: TYPE_NORMAL
  zh: 'class TestStrategy(bt.Strategy):'
- en: params = (
  id: totrans-578
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: params = (
- en: ('maperiod', 15),
  id: totrans-579
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ('maperiod', 15),
- en: ('printlog', False),
  id: totrans-580
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: ('printlog', False),
- en: )
  id: totrans-581
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: )
- en: 'def log(self, txt, dt=None, doprint=False):'
  id: totrans-582
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def log(self, txt, dt=None, doprint=False):'
- en: ''''''' Logging function fot this strategy'''''''
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: ''''''' 用于此策略的日志记录函数'''''''
- en: 'if self.params.printlog or doprint:'
  id: totrans-584
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if self.params.printlog or doprint:'
- en: dt = dt or self.datas[0].datetime.date(0)
  id: totrans-585
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dt = dt or self.datas[0].datetime.date(0)
- en: print('%s, %s' % (dt.isoformat(), txt))
  id: totrans-586
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`print(''%s, %s'' % (dt.isoformat(), txt))`'
- en: 'def __init__(self):'
  id: totrans-587
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def __init__(self):'
- en: Keep a reference to the "close" line in the data[0] dataseries
  id: totrans-588
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保持对数据[0]数据系列中“close”线的引用
- en: self.dataclose = self.datas[0].close
  id: totrans-589
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.dataclose = self.datas[0].close
- en: To keep track of pending orders and buy price/commission
  id: totrans-590
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪挂单和买入价格/佣金
- en: self.order = None
  id: totrans-591
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: self.buyprice = None
  id: totrans-592
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = None
- en: self.buycomm = None
  id: totrans-593
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = None
- en: Add a MovingAverageSimple indicator
  id: totrans-594
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一个 MovingAverageSimple 指标
- en: self.sma = bt.indicators.SimpleMovingAverage(
  id: totrans-595
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.sma = bt.indicators.SimpleMovingAverage(
- en: self.datas[0], period=self.params.maperiod)
  id: totrans-596
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.datas[0]，周期=self.params.maperiod)
- en: 'def notify_order(self, order):'
  id: totrans-597
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_order(self, order):'
- en: 'if order.status in [order.Submitted, order.Accepted]:'
  id: totrans-598
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Submitted, order.Accepted]:'
- en: Buy/Sell order submitted/accepted to/by broker - Nothing to do
  id: totrans-599
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提交/接受经纪人的买入/卖出订单 - 没有操作可执行
- en: return
  id: totrans-600
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if an order has been completed
  id: totrans-601
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查订单是否已完成
- en: 'Attention: broker could reject order if not enough cash'
  id: totrans-602
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 注意：如果现金不足，经纪人可能会拒绝订单
- en: 'if order.status in [order.Completed]:'
  id: totrans-603
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.status in [order.Completed]:'
- en: 'if order.isbuy():'
  id: totrans-604
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'if order.isbuy():'
- en: self.log(
  id: totrans-605
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log(
- en: '''BUY EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-606
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '''BUY EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
- en: (order.executed.price,
  id: totrans-607
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-608
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-609
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.buyprice = order.executed.price
  id: totrans-610
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buyprice = order.executed.price
- en: self.buycomm = order.executed.comm
  id: totrans-611
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.buycomm = order.executed.comm
- en: 'else:  # Sell'
  id: totrans-612
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'else:  # 卖出'
- en: 'self.log(''SELL EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
  id: totrans-613
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'self.log(''SELL EXECUTED, Price: %.2f, Cost: %.2f, Comm %.2f'' %'
- en: (order.executed.price,
  id: totrans-614
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (order.executed.price,
- en: order.executed.value,
  id: totrans-615
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.value,
- en: order.executed.comm))
  id: totrans-616
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: order.executed.comm))
- en: self.bar_executed = len(self)
  id: totrans-617
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.bar_executed = len(self)
- en: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
  id: totrans-618
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'elif order.status in [order.Canceled, order.Margin, order.Rejected]:'
- en: self.log('Order Canceled/Margin/Rejected')
  id: totrans-619
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('订单取消/保证金/拒绝')
- en: 'Write down: no pending order'
  id: totrans-620
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 写下：没有挂单
- en: self.order = None
  id: totrans-621
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = None
- en: 'def notify_trade(self, trade):'
  id: totrans-622
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def notify_trade(self, trade):'
- en: 'if not trade.isclosed:'
  id: totrans-623
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果交易未关闭：
- en: return
  id: totrans-624
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: self.log('OPERATION PROFIT, GROSS %.2f, NET %.2f' %
  id: totrans-625
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('操作利润，毛利 %.2f，净利 %.2f' %
- en: (trade.pnl, trade.pnlcomm))
  id: totrans-626
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: （trade.pnl, trade.pnlcomm))
- en: 'def next(self):'
  id: totrans-627
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def next(self):'
- en: Simply log the closing price of the series from the reference
  id: totrans-628
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单地记录来自参考系列的收盘价
- en: self.log('Close, %.2f' % self.dataclose[0])
  id: totrans-629
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('收盘，%.2f' % self.dataclose[0])
- en: Check if an order is pending ... if yes, we cannot send a 2nd one
  id: totrans-630
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查是否有挂单... 如果有，我们不能发送第二个挂单
- en: 'if self.order:'
  id: totrans-631
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果存在挂单...
- en: return
  id: totrans-632
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 返回
- en: Check if we are in the market
  id: totrans-633
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查我们是否在市场上
- en: 'if not self.position:'
  id: totrans-634
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果没有持仓...
- en: Not yet ... we MIGHT BUY if ...
  id: totrans-635
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还没有... 如果...，我们可能会买入
- en: 'if self.dataclose[0] > self.sma[0]:'
  id: totrans-636
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果 self.dataclose[0] > self.sma[0]:'
- en: BUY, BUY, BUY!!! (with all possible default parameters)
  id: totrans-637
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 买入，买入，买入！！！（带有所有可能的默认参数）
- en: self.log('BUY CREATE, %.2f' % self.dataclose[0])
  id: totrans-638
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('买入创建，%.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-639
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪已创建的订单以避免第二个订单
- en: self.order = self.buy()
  id: totrans-640
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.buy()
- en: 'else:'
  id: totrans-641
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 否则：
- en: 'if self.dataclose[0] < self.sma[0]:'
  id: totrans-642
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果 self.dataclose[0] < self.sma[0]:'
- en: SELL, SELL, SELL!!! (with all possible default parameters)
  id: totrans-643
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 卖出，卖出，卖出！！！（带有所有可能的默认参数）
- en: self.log('SELL CREATE, %.2f' % self.dataclose[0])
  id: totrans-644
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log('卖出创建，%.2f' % self.dataclose[0])
- en: Keep track of the created order to avoid a 2nd order
  id: totrans-645
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟踪已创建的订单以避免第二个订单
- en: self.order = self.sell()
  id: totrans-646
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.order = self.sell()
- en: 'def stop(self):'
  id: totrans-647
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'def stop(self):'
- en: self.log('(MA Period %2d) Ending Value %.2f' %
  id: totrans-648
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: self.log（'（MA 周期 %2d）结束价值 %.2f' %
- en: (self.params.maperiod, self.broker.getvalue()), doprint=True)
  id: totrans-649
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: (self.params.maperiod, self.broker.getvalue()), doprint=True)
- en: 'if __name__ == ''__main__'':'
  id: totrans-650
  prefs: []
  type: TYPE_NORMAL
  zh: '如果__name__ == ''__main__'':'
- en: Create a cerebro entity
  id: totrans-651
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 cerebro 实体
- en: cerebro = bt.Cerebro()
  id: totrans-652
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro = bt.Cerebro()
- en: Add a strategy
  id: totrans-653
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加一种策略
- en: strats = cerebro.optstrategy(
  id: totrans-654
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: strats = cerebro.optstrategy(
- en: TestStrategy,
  id: totrans-655
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: TestStrategy,
- en: maperiod=range(10, 31))
  id: totrans-656
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: maperiod=range(10, 31))
- en: Datas are in a subfolder of the samples. Need to find where the script is
  id: totrans-657
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据位于样本的子文件夹中。需要找到脚本所在的位置
- en: because it could have been called from anywhere
  id: totrans-658
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 因为它可能是从任何地方调用的
- en: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
  id: totrans-659
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: modpath = os.path.dirname(os.path.abspath(sys.argv[0]))
- en: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
  id: totrans-660
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: datapath = os.path.join(modpath, '../../datas/orcl-1995-2014.txt')
- en: Create a Data Feed
  id: totrans-661
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个数据提供
- en: data = bt.feeds.YahooFinanceCSVData(
  id: totrans-662
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: data = bt.feeds.YahooFinanceCSVData(
- en: dataname=datapath,
  id: totrans-663
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: dataname=datapath,
- en: Do not pass values before this date
  id: totrans-664
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要传递此日期之前的值
- en: fromdate=datetime.datetime(2000, 1, 1),
  id: totrans-665
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: fromdate=datetime.datetime(2000, 1, 1),
- en: Do not pass values before this date
  id: totrans-666
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要传递此日期之前的值
- en: todate=datetime.datetime(2000, 12, 31),
  id: totrans-667
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: todate=datetime.datetime(2000, 12, 31),
- en: Do not pass values after this date
  id: totrans-668
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不要传递此日期之后的值
- en: reverse=False)
  id: totrans-669
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: reverse=False)
- en: Add the Data Feed to Cerebro
  id: totrans-670
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将数据提供添加到 Cerebro
- en: cerebro.adddata(data)
  id: totrans-671
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.adddata(data)
- en: Set our desired cash start
  id: totrans-672
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置我们期望的初始现金
- en: cerebro.broker.setcash(1000.0)
  id: totrans-673
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcash(1000.0)
- en: Add a FixedSize sizer according to the stake
  id: totrans-674
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 根据股份添加一个固定大小的调整器
- en: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
  id: totrans-675
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.addsizer(bt.sizers.FixedSize, stake=10)
- en: Set the commission
  id: totrans-676
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置佣金
- en: cerebro.broker.setcommission(commission=0.0)
  id: totrans-677
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.broker.setcommission(commission=0.0)
- en: Run over everything
  id: totrans-678
  prefs:
  - PREF_IND
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对一切进行操作
- en: cerebro.run(maxcpus=1)`
  id: totrans-679
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: cerebro.run(maxcpus=1)`
- en: '[PRE39]'
  id: totrans-680
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '`2000-12-29, (MA Period 10) Ending Value 880.30'
  id: totrans-681
  prefs: []
  type: TYPE_NORMAL
  zh: '`2000-12-29，（MA 周期 10）结束价值 880.30'
- en: 2000-12-29, (MA Period 11) Ending Value 880.00
  id: totrans-682
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 11）结束价值 880.00
- en: 2000-12-29, (MA Period 12) Ending Value 830.30
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 12）结束价值 830.30
- en: 2000-12-29, (MA Period 13) Ending Value 893.90
  id: totrans-684
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 13）结束价值 893.90
- en: 2000-12-29, (MA Period 14) Ending Value 896.90
  id: totrans-685
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 14）结束价值 896.90
- en: 2000-12-29, (MA Period 15) Ending Value 973.90
  id: totrans-686
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 15）结束价值 973.90
- en: 2000-12-29, (MA Period 16) Ending Value 959.40
  id: totrans-687
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 16）结束价值 959.40
- en: 2000-12-29, (MA Period 17) Ending Value 949.80
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 17）结束价值 949.80
- en: 2000-12-29, (MA Period 18) Ending Value 1011.90
  id: totrans-689
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 18）结束价值 1011.90
- en: 2000-12-29, (MA Period 19) Ending Value 1041.90
  id: totrans-690
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 19）结束价值 1041.90
- en: 2000-12-29, (MA Period 20) Ending Value 1078.00
  id: totrans-691
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 20）结束价值 1078.00
- en: 2000-12-29, (MA Period 21) Ending Value 1058.80
  id: totrans-692
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 21）结束价值 1058.80
- en: 2000-12-29, (MA Period 22) Ending Value 1061.50
  id: totrans-693
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 22）结束价值 1061.50
- en: 2000-12-29, (MA Period 23) Ending Value 1023.00
  id: totrans-694
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 23）结束价值 1023.00
- en: 2000-12-29, (MA Period 24) Ending Value 1020.10
  id: totrans-695
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 24）结束价值 1020.10
- en: 2000-12-29, (MA Period 25) Ending Value 1013.30
  id: totrans-696
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 25）结束价值 1013.30
- en: 2000-12-29, (MA Period 26) Ending Value 998.30
  id: totrans-697
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 26）结束价值 998.30
- en: 2000-12-29, (MA Period 27) Ending Value 982.20
  id: totrans-698
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 27）结束价值 982.20
- en: 2000-12-29, (MA Period 28) Ending Value 975.70
  id: totrans-699
  prefs: []
  type: TYPE_NORMAL
  zh: 2000-12-29，（MA 周期 28）结束价值 975.70
- en: 2000-12-29, (MA Period 29) Ending Value 983.30
  id: totrans-700
  prefs: []
  type: TYPE_NORMAL
  zh: 2000年12月29日，（MA周期29）结束价值为983.30
- en: 2000-12-29, (MA Period 30) Ending Value 979.80`
  id: totrans-701
  prefs: []
  type: TYPE_NORMAL
  zh: 2000年12月29日，（MA周期30）结束价值为979.80`
- en: '```'
  id: totrans-702
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: 'Results:'
  id: totrans-703
  prefs: []
  type: TYPE_NORMAL
  zh: 结果：
- en: For periods below 18 the strategy (commissionless) loses money.
  id: totrans-704
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于低于18的周期，该策略（免佣）会亏钱。
- en: For periods between 18 and 26 (both included) the strategy makes money.
  id: totrans-705
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于周期在18到26之间（两者都包括在内），该策略赚钱。
- en: Above 26 money is lost again.
  id: totrans-706
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超过26后又会损失金钱。
- en: 'And the winning period for this strategy and the given data set is:'
  id: totrans-707
  prefs: []
  type: TYPE_NORMAL
  zh: 而该策略在给定数据集下的获胜周期是：
- en: 20 bars, which wins 78.00 units over 1000 $/€ (a 7.8%)
  id: totrans-708
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 20根棒子，在1000美元/欧元的基础上赢得了78.00个单位（7.8％）
- en: Note
  id: totrans-709
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The extra indicators from the plotting example have been removed and the start
    of operations is only influenced by the Simple Moving Average which is being optimized.
    Hence the slightly different results for period 15
  id: totrans-710
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图示例中的额外指标已被移除，操作的开始只受到正在优化的简单移动平均线的影响。因此，周期为15时结果略有不同。
- en: Conclusion
  id: totrans-711
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 结论
- en: The incremental samples have shown how to go from a barebones script to a fully
    working trading system which even plots the results and can be optimized.
  id: totrans-712
  prefs: []
  type: TYPE_NORMAL
  zh: 增量样本展示了如何从一个基本脚本发展到一个完全工作的交易系统，甚至绘制了结果并且可以优化。
- en: 'A lot more can be done to try to improve the chances of winning:'
  id: totrans-713
  prefs: []
  type: TYPE_NORMAL
  zh: 可以做更多事情来尝试提高获胜的机会：
- en: Self defined Indicators
  id: totrans-714
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义指标
- en: Creating an indicator is easy (and even plotting them is easy)
  id: totrans-715
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建一个指标很容易（甚至绘制它们也很容易）
- en: Sizers
  id: totrans-716
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 大小调整器
- en: Money Management is for many the key to success
  id: totrans-717
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 资金管理对于许多人来说是成功的关键
- en: Order Types (limit, stop, stoplimit)
  id: totrans-718
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订单类型（限价，止损，止损限价）
- en: Some others
  id: totrans-719
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他一些
- en: To ensure all the above items can be fully utilized the documentation provides
    an insight into them (and other topics)
  id: totrans-720
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保上述所有项目都能得到充分利用，文档提供了对它们（以及其他主题）的深入了解
- en: Look in the table of contents and keep on reading … and developing.
  id: totrans-721
  prefs: []
  type: TYPE_NORMAL
  zh: 查看目录并继续阅读……并发展。
- en: Best of luck
  id: totrans-722
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你好运
