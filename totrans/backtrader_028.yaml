- en: Data Feeds
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/docu/datafeed/](https://www.backtrader.com/docu/datafeed/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`backtrader` comes with a set of Data Feed parsers (at the time of writing
    all CSV Based) to let you load data from different sources.'
  prefs: []
  type: TYPE_NORMAL
- en: Yahoo (online or already saved to a file)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: VisualChart (see [www.visualchart.com](http://www.visualchart.com)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backtrader CSV (own cooked format for testing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generic CSV support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'From the Quickstart guide it should be clear that you add data feeds to a `Cerebro`
    instance. The data feeds will later be available to the different strategies in:'
  prefs: []
  type: TYPE_NORMAL
- en: An array self.datas (insertion order)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Alias to the array objects:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: self.data and self.data0 point to the first element
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: self.dataX points to elements with index X in the array
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A quick reminder as to how the insertion works:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Data Feeds Common parameters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This data feed can download data directly from Yahoo and feed into the system.
  prefs: []
  type: TYPE_NORMAL
- en: 'Parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '`dataname` (default: None) MUST BE PROVIDED'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The meaning varies with the data feed type (file location, ticker, …)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`name` (default: ‘’)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Meant for decorative purposes in plotting. If not specified it may be derived
    from `dataname` (example: last part of a file path)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`fromdate` (default: mindate)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python datetime object indicating that any datetime prior to this should be
    ignored
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`todate` (default: maxdate)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python datetime object indicating that any datetime posterior to this should
    be ignored
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`timeframe` (default: TimeFrame.Days)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Potential values: `Ticks`, `Seconds`, `Minutes`, `Days`, `Weeks`, `Months`
    and `Years`'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`compression` (default: 1)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Number of actual bars per bar. Informative. Only effective in Data Resampling/Replaying.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`sessionstart` (default: None)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indication of session starting time for the data. May be used by classes for
    purposes like resampling
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`sessionend` (default: None)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indication of session ending time for the data. May be used by classes for purposes
    like resampling
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: CSV Data Feeds Common parameters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Parameters (additional to the common ones):'
  prefs: []
  type: TYPE_NORMAL
- en: '`headers` (default: True)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Indicates if the passed data has an initial headers row
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`separator` (default: “,”)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Separator to take into account to tokenize each of the CSV rows
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: GenericCSVData
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This class exposes a generic interface allowing parsing mostly every CSV file
    format out there.
  prefs: []
  type: TYPE_NORMAL
- en: Parses a CSV file according to the order and field presence defined by the parameters
  prefs: []
  type: TYPE_NORMAL
- en: 'Specific parameters (or specific meaning):'
  prefs: []
  type: TYPE_NORMAL
- en: '`dataname`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The filename to parse or a file-like object
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`datetime` (default: 0) column containing the date (or datetime) field'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`time` (default: -1) column containing the time field if separate from the
    datetime field (-1 indicates it’s not present)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`open` (default: 1) , `high` (default: 2), `low` (default: 3), `close` (default:
    4), `volume` (default: 5), `openinterest` (default: 6)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Index of the columns containing the corresponding fields
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'If a negative value is passed (example: -1) it indicates the field is not present
    in the CSV data'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`nullvalue` (default: float(‘NaN’))'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Value that will be used if a value which should be there is missing (the CSV
    field is empty)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`dtformat` (default: %Y-%m-%d %H:%M:%S)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Format used to parse the datetime CSV field
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`tmformat` (default: %H:%M:%S)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Format used to parse the time CSV field if “present” (the default for the “time”
    CSV field is not to be present)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'An example usage covering the following requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: Limit input to year 2000
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HLOC order rather than OHLC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing values to be replaced with zero (0.0)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Daily bars are provided and datetime is just the day with format YYYY-MM-DD
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No `openinterest` column is present
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Slightly modified requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: Limit input to year 2000
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: HLOC order rather than OHLC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Missing values to be replaced with zero (0.0)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Intraday bars are provided, with separate date and time columns
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Date has format YYYY-MM-DD
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Time has format HH.MM.SS (instead of the usual HH:MM:SS)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: No `openinterest` column is present
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This can also be made *permanent* with subclassing:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This new class can be reused now by just providing the `dataname`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
