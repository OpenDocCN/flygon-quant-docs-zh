["```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)` \n```", "```py\n`* `fill_price` (def: None): if None (or evaluates to False),the\n  closing price will be used, else the passed value (which can be\n  for example \u2018NaN\u2019 to have a missing bar in terms of evaluation but\n  present in terms of time\n\n* `fill_vol` (def: NaN): used to fill the volume of missing bars\n\n* `fill_oi` (def: NaN): used to fill the openinterest of missing bars` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* fill_price (None)\n\n* fill_vol (nan)\n\n* fill_oi (nan)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* funcfilter (None)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* nullvalue (nan)\n\n* dtformat (%Y-%m-%d %H:%M:%S)\n\n* tmformat (%H:%M:%S)\n\n* datetime (0)\n\n* time (-1)\n\n* open (1)\n\n* high (2)\n\n* low (3)\n\n* close (4)\n\n* volume (5)\n\n* openinterest (6)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.5)\n\n* calendar (None)\n\n* sectype (STK)\n\n* exchange (SMART)\n\n* currency ()\n\n* rtbar (False)\n\n* historical (False)\n\n* what (None)\n\n* useRTH (False)\n\n* backfill_start (True)\n\n* backfill (True)\n\n* backfill_from (None)\n\n* latethrough (False)\n\n* tradename (None)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* host (127.0.0.1)\n\n* port (8086)\n\n* username (None)\n\n* password (None)\n\n* database (None)\n\n* startdate (None)\n\n* high (high_p)\n\n* low (low_p)\n\n* open (open_p)\n\n* close (close_p)\n\n* volume (volume)\n\n* ointerest (oi)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* nullvalue (nan)\n\n* dtformat (%Y.%m.%d)\n\n* tmformat (%H:%M)\n\n* datetime (0)\n\n* time (1)\n\n* open (2)\n\n* high (3)\n\n* low (4)\n\n* close (5)\n\n* volume (6)\n\n* openinterest (-1)` \n```", "```py\n`(TimeFrame.Seconds, 5): 'S5',\n(TimeFrame.Seconds, 10): 'S10',\n(TimeFrame.Seconds, 15): 'S15',\n(TimeFrame.Seconds, 30): 'S30',\n(TimeFrame.Minutes, 1): 'M1',\n(TimeFrame.Minutes, 2): 'M3',\n(TimeFrame.Minutes, 3): 'M3',\n(TimeFrame.Minutes, 4): 'M4',\n(TimeFrame.Minutes, 5): 'M5',\n(TimeFrame.Minutes, 10): 'M10',\n(TimeFrame.Minutes, 15): 'M15',\n(TimeFrame.Minutes, 30): 'M30',\n(TimeFrame.Minutes, 60): 'H1',\n(TimeFrame.Minutes, 120): 'H2',\n(TimeFrame.Minutes, 180): 'H3',\n(TimeFrame.Minutes, 240): 'H4',\n(TimeFrame.Minutes, 360): 'H6',\n(TimeFrame.Minutes, 480): 'H8',\n(TimeFrame.Days, 1): 'D',\n(TimeFrame.Weeks, 1): 'W',\n(TimeFrame.Months, 1): 'M',` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.5)\n\n* calendar (None)\n\n* historical (False)\n\n* backfill_start (True)\n\n* backfill (True)\n\n* backfill_from (None)\n\n* bidask (True)\n\n* useask (False)\n\n* includeFirst (True)\n\n* reconnect (True)\n\n* reconnections (-1)\n\n* reconntimeout (5.0)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* nocase (True)\n\n* datetime (None)\n\n* open (-1)\n\n* high (-1)\n\n* low (-1)\n\n* close (-1)\n\n* volume (-1)\n\n* openinterest (-1)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* datetime (0)\n\n* open (1)\n\n* high (2)\n\n* low (3)\n\n* close (4)\n\n* volume (5)\n\n* openinterest (6)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* reverse (True)\n\n* adjclose (True)\n\n* round (False)\n\n* decimals (2)\n\n* baseurl ([https://www.quandl.com/api/v3/datasets](https://www.quandl.com/api/v3/datasets))\n\n* proxies ({})\n\n* buffered (True)\n\n* apikey (None)\n\n* dataset (WIKI)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* reverse (False)\n\n* adjclose (True)\n\n* round (False)\n\n* decimals (2)` \n```", "```py\n    `checkdate(dt, d):` \n    ```", "```py\n`* `False`: the expiration cannot take place` \n```", "```py\n    `checkcondition(d0, d1)` \n    ```", "```py\n`* `False`: the expiration cannot take place` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* checkdate (None)\n\n* checkcondition (None)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* nullvalue (nan)\n\n* dtformat (%Y/%m/%d)\n\n* tmformat (%H:%M:%S)\n\n* datetime (0)\n\n* time (-1)\n\n* open (1)\n\n* high (2)\n\n* low (3)\n\n* close (4)\n\n* volume (5)\n\n* openinterest (6)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.5)\n\n* calendar (None)\n\n* historical (False)\n\n* millisecond (True)\n\n* tradename (None)\n\n* usetimezones (True)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime\n\n* adjclose` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* reverse (False)\n\n* adjclose (True)\n\n* adjvolume (True)\n\n* round (True)\n\n* decimals (2)\n\n* roundvolume (False)\n\n* swapcloses (False)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime\n\n* adjclose` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* reverse (False)\n\n* adjclose (True)\n\n* adjvolume (True)\n\n* round (True)\n\n* decimals (2)\n\n* roundvolume (False)\n\n* swapcloses (False)\n\n* proxies ({})\n\n* period (d)\n\n* urlhist ([https://finance.yahoo.com/quote](https://finance.yahoo.com/quote)/{}/history)\n\n* urldown ([https://query1.finance.yahoo.com/v7/finance/download](https://query1.finance.yahoo.com/v7/finance/download))\n\n* retries (3)` \n```", "```py\n`* close\n\n* low\n\n* high\n\n* open\n\n* volume\n\n* openinterest\n\n* datetime\n\n* adjclose` \n```", "```py\n`* dataname (None)\n\n* name ()\n\n* compression (1)\n\n* timeframe (5)\n\n* fromdate (None)\n\n* todate (None)\n\n* sessionstart (None)\n\n* sessionend (None)\n\n* filters ([])\n\n* tz (None)\n\n* tzinput (None)\n\n* qcheck (0.0)\n\n* calendar (None)\n\n* headers (True)\n\n* separator (,)\n\n* reverse (False)\n\n* adjclose (True)\n\n* adjvolume (True)\n\n* round (True)\n\n* decimals (2)\n\n* roundvolume (False)\n\n* swapcloses (False)\n\n* version ()` \n```"]