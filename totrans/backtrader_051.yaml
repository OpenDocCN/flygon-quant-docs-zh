- en: TA-Lib
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/docu/talib/talib/](https://www.backtrader.com/docu/talib/talib/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Even if *backtrader* offers an already high number of built-in indicators and
    developing an indicator is mostly a matter of defining the inputs, outputs and
    writing the formula in a natural manner, some people want to use *TA-LIB*. Some
    of the reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: Indicator *X* is in the library and not in *backtrader* (the author would gladly
    accept a request)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*TA-LIB* behavior is well known and people trust good old things'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In order to satisfy each and every taste, *TA-LIB* integration is offered.
  prefs: []
  type: TYPE_NORMAL
- en: Requirements
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Python wrapper for TA-Lib](https://github.com/mrjbq7/ta-lib)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any dependencies needed by it (for example *numpy*)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The installation details are on the *GitHub* repository
  prefs: []
  type: TYPE_NORMAL
- en: Using *ta-lib*
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As easy as using any of the indicators already built-in in *backtrader*. Example
    of a *Simple Moving Average*. First the *backtrader* one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Now the *ta-lib* example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Et voilá! Of course the *params* for the *ta-lib* indicators are defined by
    the library itself and not by *backtrader*. In this case the *SMA* in *ta-lib*
    takes a parameter named `timeperiod` to defined the size of the operating window.
  prefs: []
  type: TYPE_NORMAL
- en: 'For indicators that require more than one input, for example the *Stochastic*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Notice how `high`, `low` and `close` have been individually passed. One could
    always pass `open` instead of `low` (or any other data series) and experiment.
  prefs: []
  type: TYPE_NORMAL
- en: 'The *ta-lib* indicator documentation is automatically parsed and added to the
    *backtrader* docs. You may also check the *ta-lib* source code/docs. Or adittionally
    do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Which in this case outputs:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Which offers some information:'
  prefs: []
  type: TYPE_NORMAL
- en: Which *Input* is to be expected (*DISREGARD the ``ndarray`` comment* because
    backtrader manages the conversions in the background)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which *parameters* and which default values
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Which output *lines* the indicator actually offers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Moving Averages and MA_Type
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To select a specific *moving average* for indicators like `bt.talib.STOCH`,
    the standard *ta-lib* `MA_Type` is accesible with `backtrader.talib.MA_Type`.
    For example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Plotting ta-lib indicators
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Just as with regular usage, there is nothing special to do to plot the *ta-lib*
    indicators.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'Indicators which output a *CANDLE* (all those looking for a candlestick pattern)
    deliver a binary output: either 0 or 100\. In order to avoid adding a `subplot`
    to the chart, there is an automated plotting translation to plot them over the
    *data* at the point in time in which the pattern was recognized.'
  prefs: []
  type: TYPE_NORMAL
- en: Examples and comparisons
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The following are plots comparing the outputs of some *ta-lib* indicators against
    the equivalent built-in indicators in *backtrader*. To consider:'
  prefs: []
  type: TYPE_NORMAL
- en: The *ta-lib* indicators get a `TA_` prefix on the plot. This is specifically
    done by the sample to help the user spot which is which
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Moving Averages* (if both deliver the same result) will be plotted *ON* top
    of the other existing *Moving Average*. The two indicators cannot be seen separately
    and the test is a pass if that’s the case.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All samples include a `CDLDOJI` indicator as a reference
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: KAMA (Kaufman Moving Average)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This is the 1^(st) example because it is the only (from all indicators which
    the sample directly compare) that has a difference:'
  prefs: []
  type: TYPE_NORMAL
- en: The initial values of the the samples are not the same
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: At some point in time, the values converge and both *KAMA* implementations have
    the same behavior.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After having analyzed the *ta-lib* source code:'
  prefs: []
  type: TYPE_NORMAL
- en: The implementation in *ta-lib* makes a non-industry standard choice for the
    1^(st) values of the *KAMA*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The choice can be seen in the source code quoting from the source code): *The
    yesterday price is used here as the previous KAMA.*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '*backtrader* does the usual choice which is the same as for example the one
    from *Stockcharts*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[KAMA at StockCharts](http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:kaufman_s_adaptive_moving_average)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Since we need an initial value to start the calculation, the first KAMA is
    just a simple moving average*'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Hence the difference. Furthermore:'
  prefs: []
  type: TYPE_NORMAL
- en: The *ta-lib* `KAMA` implementation doesn’t allow specifying the `fast` and `slow`
    periods for the adjustment of the *scalable constant* defined by *Kaufman*.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sample execution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/96adf12f470193982b80cb0e4b04f936.png)'
  prefs: []
  type: TYPE_IMG
- en: SMA
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/854a2174af3a979739fc533d27e6303f.png)'
  prefs: []
  type: TYPE_IMG
- en: EMA
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/bb565d4ebf80767c1845e14855425dba.png)'
  prefs: []
  type: TYPE_IMG
- en: Stochastic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/4cbafdc7fc9c487af417443d61eb6a7b.png)'
  prefs: []
  type: TYPE_IMG
- en: RSI
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/c2de2e76ef142baa81dd8013275e619d.png)'
  prefs: []
  type: TYPE_IMG
- en: MACD
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/cd9c636ab704454de629be07e4916303.png)'
  prefs: []
  type: TYPE_IMG
- en: Bollinger Bands
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/3873648e820de0c0fdd15ee7015a1500.png)'
  prefs: []
  type: TYPE_IMG
- en: AROON
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that *ta-lib* chooses to put the *down* line first and the colours are
    inverted when compared with the *backtrader* built-in indicator.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/37f6242b93bafec219a22f1b43cdf523.png)'
  prefs: []
  type: TYPE_IMG
- en: Ultimate Oscillator
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/4417f633399efe2e57e8bbe262242074.png)'
  prefs: []
  type: TYPE_IMG
- en: Trix
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f272a8ba189616dee14e4ee7d9819b19.png)'
  prefs: []
  type: TYPE_IMG
- en: ADXR
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here *backtrader* offers both the `ADX` and `ADXR` lines.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/418b94a30afcba6da96af98c78127b48.png)'
  prefs: []
  type: TYPE_IMG
- en: DEMA
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/0ffed62784c7804e19c61010bf3bba27.png)'
  prefs: []
  type: TYPE_IMG
- en: TEMA
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/e60b1389d6b46d952c2dbbaf589ee7d0.png)'
  prefs: []
  type: TYPE_IMG
- en: PPO
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Here *backtrader* offers not only the `ppo` line, but a more traditional `macd`
    approach.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/f6e2a0829ea03025af80f61183a12524.png)'
  prefs: []
  type: TYPE_IMG
- en: WilliamsR
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/d8e9f717b4eaf1de2c3c4c27dfb37f13.png)'
  prefs: []
  type: TYPE_IMG
- en: ROC
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: All indicators show have exactly the same shape, but how to track *momentum*
    or *rate of change* has several definitions
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Output
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/43b16c19fb1a12c47be66f17b61b3a5e.png)'
  prefs: []
  type: TYPE_IMG
- en: Sample Usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Sample Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
