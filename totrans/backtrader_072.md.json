["```py\n`days * abs(size) * price * (interest / 365)` \n```", "```py\n`def _get_credit_interest(self, size, price, days, dt0, dt1):\n  '''\n This method returns  the cost in terms of credit interest charged by\n the broker.\n\n In the case of ``size > 0`` this method will only be called if the\n parameter to the class ``interest_long`` is ``True``\n\n The formulat for the calculation of the credit interest rate is:\n\n The formula: ``days * price * abs(size) * (interest / 365)``\n\n Params:\n - ``data``: data feed for which interest is charged\n\n - ``size``: current position size. > 0 for long positions and < 0 for\n short positions (this parameter will not be ``0``)\n\n - ``price``: current position price\n\n - ``days``: number of days elapsed since last credit calculation\n (this is (dt0 - dt1).days)\n\n - ``dt0``: (datetime.datetime) current datetime\n\n - ``dt1``: (datetime.datetime) datetime of previous calculation\n\n ``dt0`` and ``dt1`` are not used in the default implementation and are\n provided as extra input for overridden methods\n '''` \n```", "```py\n`import backtrader as bt\n\nclass MyCommissionInfo(bt.CommInfo):\n\n   def _get_credit_interest(self, size, price, days, dt0, dt1):\n       return 1.0 * abs(size) * price * (self.p.interest / 365.0)` \n```"]