["```py\n`class Strategy(bt.Strategy):\n\n    def next(self):\n\n        # The DAX future opens at 08:00 CET\n        if self.data.datetime.time() < datetime.time(8, 30):\n            # don't operate until the market has been running 30 minutes\n            return  #` \n```", "```py\n`class Strategy(bt.Strategy):\n\n    def next(self):\n\n        # The SPX opens at 09:30 US/Eastern all year long\n        # This is most of the year 15:30 CET\n        # But it is sometimes 16:30 CET or 14:30 CET if a DST switch on-off\n        # has happened in the USA and not in Europe\n\n        # That's why the code below is unreliable\n\n        if self.data.datetime.time() < datetime.time(16, 0):\n            # don't operate until the market has been running 30 minutes\n            return  #` \n```", "```py\n`import pytz\n\nimport bt\n\ndata = bt.feeds.MyFeed('ES-Mini', tz=pytz.timezone('US/Eastern'))\n\nclass Strategy(bt.Strategy):\n\n    def next(self):\n\n        # This will work all year round.\n        # The data source will return in the frame of the 'US/Eastern' time\n        # zone and the user is quoting '10:00' as reference time\n        # Because in the 'US/Eastern' timezone the SPX index always starts\n        # trading at 09:30, this will always work\n\n        if self.data.datetime.time() < datetime.time(10, 0):\n            # don't operate until the market has been running 30 minutes\n            return  #` \n```", "```py\n`import bt\n\ndata = bt.feeds.MyFeedAutoTZ('ES-Mini')\n\nclass Strategy(bt.Strategy):\n\n    def next(self):\n\n        # This will work all year round.\n        # The data source will return in the frame of the 'US/Eastern' time\n        # zone and the user is quoting '10:00' as reference time\n        # Because in the 'US/Eastern' timezone the SPX index always starts\n        # trading at 09:30, this will always work\n\n        if self.data.datetime.time() < datetime.time(10, 0):\n            # don't operate until the market has been running 30 minutes\n            return  #` \n```"]