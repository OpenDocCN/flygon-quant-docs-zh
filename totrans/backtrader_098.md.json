["```py\n`from __future__ import (absolute_import, division, print_function,\n                        unicode_literals)\n\nimport backtrader as bt\nimport backtrader.indicators as btind\n\nclass MyTest(bt.Strategy):\n    params = (('period', 15),)\n\n    def log(self, txt, dt=None):\n  ''' Logging function fot this strategy'''\n        dt = dt or self.data.datetime[0]\n        if isinstance(dt, float):\n            dt = bt.num2date(dt)\n        print('%s, %s' % (dt.isoformat(), txt))\n\n    def __init__(self):\n        sma = btind.SMA(period=self.p.period)\n\n    def next(self):\n        ltxt = '%d, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f'\n\n        self.log(ltxt %\n                 (len(self),\n                  self.data.open[0], self.data.high[0],\n                  self.data.low[0], self.data.close[0],\n                  self.data.volume[0], self.data.openinterest[0]))` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --strategy mymod.py` \n```", "```py\n`2006-01-20T23:59:59+00:00, 15, 3593.16, 3612.37, 3550.80, 3550.80, 0.00, 0.00\n2006-01-23T23:59:59+00:00, 16, 3550.24, 3550.24, 3515.07, 3544.31, 0.00, 0.00\n2006-01-24T23:59:59+00:00, 17, 3544.78, 3553.16, 3526.37, 3532.68, 0.00, 0.00\n2006-01-25T23:59:59+00:00, 18, 3532.72, 3578.00, 3532.72, 3578.00, 0.00, 0.00\n...\n...\n2006-12-22T23:59:59+00:00, 252, 4109.86, 4109.86, 4072.62, 4073.50, 0.00, 0.00\n2006-12-27T23:59:59+00:00, 253, 4079.70, 4134.86, 4079.70, 4134.86, 0.00, 0.00\n2006-12-28T23:59:59+00:00, 254, 4137.44, 4142.06, 4125.14, 4130.66, 0.00, 0.00\n2006-12-29T23:59:59+00:00, 255, 4130.12, 4142.01, 4119.94, 4119.94, 0.00, 0.00` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --plot \\\n      --strategy mymod.py:period=50` \n```", "```py\n`from __future__ import (absolute_import, division, print_function,\n                        unicode_literals)\n\nimport backtrader as bt\nimport backtrader.indicators as btind\n\nclass SMA_CrossOver(bt.Strategy):\n\n    params = (('fast', 10), ('slow', 30))\n\n    def __init__(self):\n\n        sma_fast = btind.SMA(period=self.p.fast)\n        sma_slow = btind.SMA(period=self.p.slow)\n\n        self.buysig = btind.CrossOver(sma_fast, sma_slow)\n\n    def next(self):\n        if self.position.size:\n            if self.buysig < 0:\n                self.sell()\n\n        elif self.buysig > 0:\n            self.buy()` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --plot \\\n      --strategy :SMA_CrossOver` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --plot \\\n      --cash 20000 \\\n      --commission 2.0 \\\n      --mult 10 \\\n      --margin 2000 \\\n      --strategy :SMA_CrossOver:fast=5,slow=20` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --cash 20000 \\\n      --commission 2.0 \\\n      --mult 10 \\\n      --margin 2000 \\\n      --nostdstats \\\n      --observer :Broker` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --cash 20000 \\\n      --commission 2.0 \\\n      --mult 10 \\\n      --margin 2000 \\\n      --cerebro stdstats=False \\\n      --observer :Broker` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2005-2006-day-001.txt \\\n      --strategy :SMA_CrossOver \\\n      --analyzer :SharpeRatio` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2005-2006-day-001.txt \\\n      --strategy :SMA_CrossOver \\\n      --analyzer :SharpeRatio \\\n      --plot \\\n      --pranalyzer\n\n====================\n== Analyzers\n====================\n##########\nsharperatio\n##########\n{'sharperatio': 11.647332609673256}` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2005-2006-day-001.txt \\\n      --strategy :SMA_CrossOver \\\n      --analyzer :SharpeRatio \\\n      --plot \\\n      --writer\n\n===============================================================================\nCerebro:\n  -----------------------------------------------------------------------------\n  - Datas:\n    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    - Data0:\n      - Name: 2005-2006-day-001\n      - Timeframe: Days\n      - Compression: 1\n  -----------------------------------------------------------------------------\n  - Strategies:\n    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n    - SMA_CrossOver:\n      *************************************************************************\n      - Params:\n        - fast: 10\n        - slow: 30\n        - _movav: SMA\n      *************************************************************************\n      - Indicators:\n        .......................................................................\n        - SMA:\n          - Lines: sma\n          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n          - Params:\n            - period: 30\n        .......................................................................\n        - CrossOver:\n          - Lines: crossover\n          - Params: None\n      *************************************************************************\n      - Observers:\n        .......................................................................\n        - Broker:\n          - Lines: cash, value\n          - Params: None\n        .......................................................................\n        - BuySell:\n          - Lines: buy, sell\n          - Params: None\n        .......................................................................\n        - Trades:\n          - Lines: pnlplus, pnlminus\n          - Params: None\n      *************************************************************************\n      - Analyzers:\n        .......................................................................\n        - Value:\n          - Begin: 10000.0\n          - End: 10496.68\n        .......................................................................\n        - SharpeRatio:\n          - Params: None\n          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n          - Analysis:\n            - sharperatio: 11.6473326097` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --nostdstats \\\n      --observer :Broker \\\n      --indicator :Stochastic:period_dslow=5 \\\n      --plot` \n```", "```py\n`btrun --csvformat btcsv \\\n      --data ../../datas/2006-day-001.txt \\\n      --nostdstats \\\n      --observer :Broker \\\n      --indicator :Stochastic:period_dslow=5 \\\n      --plot style=\\\"candle\\\"` \n```", "```py\n`$ btrun --help\nusage: btrun-script.py [-h] --data DATA [--cerebro [kwargs]] [--nostdstats]\n                       [--format {yahoocsv_unreversed,vchart,vchartcsv,yahoo,mt4csv,ibdata,sierracsv,yahoocsv,btcsv,vcdata}]\n                       [--fromdate FROMDATE] [--todate TODATE]\n                       [--timeframe {microseconds,seconds,weeks,months,minutes,days,years}]\n                       [--compression COMPRESSION]\n                       [--resample RESAMPLE | --replay REPLAY]\n                       [--strategy module:name:kwargs]\n                       [--signal module:signaltype:name:kwargs]\n                       [--observer module:name:kwargs]\n                       [--analyzer module:name:kwargs]\n                       [--pranalyzer | --ppranalyzer]\n                       [--indicator module:name:kwargs] [--writer [kwargs]]\n                       [--cash CASH] [--commission COMMISSION]\n                       [--margin MARGIN] [--mult MULT] [--interest INTEREST]\n                       [--interest_long] [--slip_perc SLIP_PERC]\n                       [--slip_fixed SLIP_FIXED] [--slip_open]\n                       [--no-slip_match] [--slip_out] [--flush]\n                       [--plot [kwargs]]\n\nBacktrader Run Script\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --resample RESAMPLE, -rs RESAMPLE\n                        resample with timeframe:compression values\n  --replay REPLAY, -rp REPLAY\n                        replay with timeframe:compression values\n  --pranalyzer, -pralyzer\n                        Automatically print analyzers\n  --ppranalyzer, -ppralyzer\n                        Automatically PRETTY print analyzers\n  --plot [kwargs], -p [kwargs]\n                        Plot the read data applying any kwargs passed\n\n                        For example:\n\n                          --plot style=\"candle\" (to plot candlesticks)\n\nData options:\n  --data DATA, -d DATA  Data files to be added to the system\n\nCerebro options:\n  --cerebro [kwargs], -cer [kwargs]\n                        The argument can be specified with the following form:\n\n                          - kwargs\n\n                            Example: \"preload=True\" which set its to True\n\n                        The passed kwargs will be passed directly to the cerebro\n                        instance created for the execution\n\n                        The available kwargs to cerebro are:\n                          - preload (default: True)\n                          - runonce (default: True)\n                          - maxcpus (default: None)\n                          - stdstats (default: True)\n                          - live (default: False)\n                          - exactbars (default: False)\n                          - preload (default: True)\n                          - writer (default False)\n                          - oldbuysell (default False)\n                          - tradehistory (default False)\n  --nostdstats          Disable the standard statistics observers\n  --format {yahoocsv_unreversed,vchart,vchartcsv,yahoo,mt4csv,ibdata,sierracsv,yahoocsv,btcsv,vcdata}, --csvformat {yahoocsv_unreversed,vchart,vchartcsv,yahoo,mt4csv,ibdata,sierracsv,yahoocsv,btcsv,vcdata}, -c {yahoocsv_unreversed,vchart,vchartcsv,yahoo,mt4csv,ibdata,sierracsv,yahoocsv,btcsv,vcdata}\n                        CSV Format\n  --fromdate FROMDATE, -f FROMDATE\n                        Starting date in YYYY-MM-DD[THH:MM:SS] format\n  --todate TODATE, -t TODATE\n                        Ending date in YYYY-MM-DD[THH:MM:SS] format\n  --timeframe {microseconds,seconds,weeks,months,minutes,days,years}, -tf {microseconds,seconds,weeks,months,minutes,days,years}\n                        Ending date in YYYY-MM-DD[THH:MM:SS] format\n  --compression COMPRESSION, -cp COMPRESSION\n                        Ending date in YYYY-MM-DD[THH:MM:SS] format\n\nStrategy options:\n  --strategy module:name:kwargs, -st module:name:kwargs\n                        This option can be specified multiple times.\n\n                        The argument can be specified with the following form:\n\n                          - module:classname:kwargs\n\n                            Example: mymod:myclass:a=1,b=2\n\n                        kwargs is optional\n\n                        If module is omitted then class name will be sought in\n                        the built-in strategies module. Such as in:\n\n                          - :name:kwargs or :name\n\n                        If name is omitted, then the 1st strategy found in the mod\n                        will be used. Such as in:\n\n                          - module or module::kwargs\n\nSignals:\n  --signal module:signaltype:name:kwargs, -sig module:signaltype:name:kwargs\n                        This option can be specified multiple times.\n\n                        The argument can be specified with the following form:\n\n                          - signaltype:module:signaltype:classname:kwargs\n\n                            Example: longshort+mymod:myclass:a=1,b=2\n\n                        signaltype may be ommited: longshort will be used\n\n                            Example: mymod:myclass:a=1,b=2\n\n                        kwargs is optional\n\n                        signaltype will be uppercased to match the defintions\n                        fromt the backtrader.signal module\n\n                        If module is omitted then class name will be sought in\n                        the built-in signals module. Such as in:\n\n                          - LONGSHORT::name:kwargs or :name\n\n                        If name is omitted, then the 1st signal found in the mod\n                        will be used. Such as in:\n\n                          - module or module:::kwargs\n\nObservers and statistics:\n  --observer module:name:kwargs, -ob module:name:kwargs\n                        This option can be specified multiple times.\n\n                        The argument can be specified with the following form:\n\n                          - module:classname:kwargs\n\n                            Example: mymod:myclass:a=1,b=2\n\n                        kwargs is optional\n\n                        If module is omitted then class name will be sought in\n                        the built-in observers module. Such as in:\n\n                          - :name:kwargs or :name\n\n                        If name is omitted, then the 1st observer found in the\n                        will be used. Such as in:\n\n                          - module or module::kwargs\n\nAnalyzers:\n  --analyzer module:name:kwargs, -an module:name:kwargs\n                        This option can be specified multiple times.\n\n                        The argument can be specified with the following form:\n\n                          - module:classname:kwargs\n\n                            Example: mymod:myclass:a=1,b=2\n\n                        kwargs is optional\n\n                        If module is omitted then class name will be sought in\n                        the built-in analyzers module. Such as in:\n\n                          - :name:kwargs or :name\n\n                        If name is omitted, then the 1st analyzer found in the\n                        will be used. Such as in:\n\n                          - module or module::kwargs\n\nIndicators:\n  --indicator module:name:kwargs, -ind module:name:kwargs\n                        This option can be specified multiple times.\n\n                        The argument can be specified with the following form:\n\n                          - module:classname:kwargs\n\n                            Example: mymod:myclass:a=1,b=2\n\n                        kwargs is optional\n\n                        If module is omitted then class name will be sought in\n                        the built-in analyzers module. Such as in:\n\n                          - :name:kwargs or :name\n\n                        If name is omitted, then the 1st analyzer found in the\n                        will be used. Such as in:\n\n                          - module or module::kwargs\n\nWriters:\n  --writer [kwargs], -wr [kwargs]\n                        This option can be specified multiple times.\n\n                        The argument can be specified with the following form:\n\n                          - kwargs\n\n                            Example: a=1,b=2\n\n                        kwargs is optional\n\n                        It creates a system wide writer which outputs run data\n\n                        Please see the documentation for the available kwargs\n\nCash and Commission Scheme Args:\n  --cash CASH, -cash CASH\n                        Cash to set to the broker\n  --commission COMMISSION, -comm COMMISSION\n                        Commission value to set\n  --margin MARGIN, -marg MARGIN\n                        Margin type to set\n  --mult MULT, -mul MULT\n                        Multiplier to use\n  --interest INTEREST   Credit Interest rate to apply (0.0x)\n  --interest_long       Apply credit interest to long positions\n  --slip_perc SLIP_PERC\n                        Enable slippage with a percentage value\n  --slip_fixed SLIP_FIXED\n                        Enable slippage with a fixed point value\n  --slip_open           enable slippage for when matching opening prices\n  --no-slip_match       Disable slip_match, ie: matching capped at\n                        high-low if slippage goes over those limits\n  --slip_out            with slip_match enabled, match outside high-low\n  --flush               flush the output - useful under win32 systems` \n```"]