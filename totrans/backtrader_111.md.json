["```py\n`def __init__(self):\n    ...\n    self.ma1 = bt.indicators.SMA(self.datas[0],\n                                   period=self.p.period\n                                  )\n    self.ma2 = bt.indicators.SMA(self.datas[1],\n                                   period=self.p.period\n                                  )` \n```", "```py\n`...\n# Not yet ... we MIGHT BUY if ...\nif (self.ma1[0]-self.ma1[-1])/self.ma1[-1]>(self.ma2[0]-self.ma2[-1])/self.ma2[-1]:\n...` \n```", "```py\n`...\n# Already in the market ... we might sell\nif (self.ma1[0]-self.ma1[-1])/self.ma1[-1]<=(self.ma2[0]-self.ma2[-1])/self.ma2[-1]:\n...` \n```", "```py\n`def __init__(self):\n    ...\n\n    # Let's create the moving averages as before\n    ma1 = bt.ind.SMA(self.data0, period=self.p.period)\n    ma2 = bt.ind.SMA(self.data1, period=self.p.period)\n\n    # Use line delay notation (-x) to get a ref to the -1 point\n    ma1_pct = ma1 / ma1(-1) - 1.0  # The ma1 percentage part\n    ma2_pct = ma2 / ma2(-1) - 1.0  # The ma2 percentage part\n\n    self.buy_sig = ma1_pct > ma2_pct  # buy signal\n    self.sell_sig = ma1_pct <= ma2_pct  # sell signal` \n```", "```py\n`def next(self):\n    ...\n    # Not yet ... we MIGHT BUY if ...\n    if self.buy_sig:\n    ...\n\n    ...\n    # Already in the market ... we might sell\n    if self.sell_sig:\n    ...` \n```", "```py\n`def __init__(self):\n    ...\n\n    # Let's create the moving averages as before\n    ma1 = bt.ind.SMA(self.data0, period=self.p.period)\n    ma2 = bt.ind.SMA(self.data1, period=self.p.period)\n\n    ma1_pct = bt.ind.PctChange(ma1, period=1)  # The ma1 percentage part\n    ma2_pct = bt.ind.PctChange(ma2, period=1)  # The ma2 percentage part\n\n    self.buy_sig = ma1_pct > ma2_pct  # buy signal\n    self.sell_sig = ma1_pct <= ma2_pct  # sell signal` \n```"]