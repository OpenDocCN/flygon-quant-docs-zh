["```py\n`...\ncerebro.addanalyzer(bt.analyzers.TimeReturn)  # auto-detect broker mode\ncerebro.addanalyzer(bt.analyzers.TimeReturn, fund=True)  # track fund value\ncerebro.addanalyzer(bt.analyzers.TimeReturn, fund=False)  # track net asset value\n...` \n```", "```py\n`- ``100.0 / 100.0 = 1 share```", "```py\n\nNotice that the *fundvalue* remains unchanged. Quickly forwarding to the end of the year we have the following:\n\n*   Starting net-asset-value: `1000`\n\n*   Final net-asset-value: `2200`\n\n*   Starting fundvalue = `100`\n\n*   Final fundvalue = `100`\n\n*   Starting number of shares: `10`\n\n*   Final number of shares: `22`\n\nNow if we calculate the returns using the starting and ending *fundvalues* and because they are the same we have a: `0%` which matches the reality. because cash additions have not changed\n\n## Using *fund tracking* in backtrader\n\n### Adding cash\n\nFirst, the broker has gained a method to canonically add cash to the system:\n\n```", "```py\n\nUsing it inside the strategy for example:\n\n```", "```py\n\nThis method **MUST** be used to track the entry and exit of cash into the system and properly track the fund value.\n\n### Automatic\n\nActivate it in the *broker*:\n\n```", "```py\n\nchanging at the same time the default fund start value:\n\n```", "```py\n\nor in independent calls:\n\n```", "```py\n\nAfter activation of the default mode and coming back to the `TimeReturn` analyzer examples from above:\n\n```", "```py\n\n`1` and `2` are equivalent. But one should go for `1`. If one wishes to compare, one can always force the `TimeReturn` analyzer to not use the *fundvalue* and rather track the *net-asset-value*\n\nAn example is worth a thousand words. In the sample, we\u2019ll be using doing as described above but with some extra cash (the asset has a per-share value over `3000`). The initial cash level will be `10000`, the default in *backtrader* and on the *15^(th)* of each month, `1000` extra monetary units will be added (using a recurring `Timer`). It will be 24 months (which is the size of the standard data sample used in *backtrader*)\n\n#### Without any operations\n\n```", "```py\n\nThe graphical view\n\n![image](../Images/0dc175c0aaa817528eafd4a73718a16d.png)\n\nAnd the text output (capped for readability):\n\n```", "```py\n\nThere are 3 `TimeReturn` analyzers getting added.\n\n*   The 1^(st) has `fund=None` (default) which means to track the actual `fundmode` set in the broker (in this case `True`)\n\n    It says that the yearly returns were `0.0` and `0.0`. Since we made no operations: **Ok**\n\n*   The 2^(nd) has `fund=True` which means to use the *fundvalue* always\n\n    It says that the yearly returns were `0.0` and `0.0`. Since we made no operations: **Ok**\n\n*   The 3^(rd) has `fund=False` which means to use the *net-asset-value* always\n\n    It says that the yearly returns were `1.2` (*120%*) and `0.54` (*54%*). Since we made no operations: **This is clearly wrong**\n\nThe plot contains also the 2 new *Observers* (`FundValue` and `FundShares`) which allow to see how even if the *net-asset-value* grows with the addition of cash every month, the *fundvalue* remains constant as `100.0`. At the same times the shares grow with each cash addition.\n\n#### Let\u2019s trade\n\nThe same as above but with some trading using a standard moving average crossover\n\n```", "```py\n\nThe graphical view\n\n![image](../Images/03a9b4204180b3201aa5cfece1a37a3d.png)\n\nAnd the text output (capped for readability):\n\n```", "```py\n\nThe same three `TimeReturn` analyzers from before. The ones with `fund=None` and `fund=True` give reasonable results whereas the one using `fund=False` is clearly off the chart again with `119%` and `54%`, which is clearly not the return offered by the moving average crossover.\n\n### Manual\n\nIn this case (which is the default in the broker and even if the broker is tracking the value of the fund, only those analyzers with `fund=True` will use the value.\n\nA quick run with only the textual ouput:\n\n```", "```py\n\nOutput:\n\n```", "```py\n\nNow only the `TimeReturn` with `fund=True` delivers sensible results.\n\n## Conclusion\n\nThe new `fundmode` implemented in the broker and which can be used (automatically/manually) in the analyzers, allows to use *backtrader* to model the inner workings of a real fund or use cases like constant investment of money at given intervals.\n\n## Sample Usage\n\n```", "```py\n\n## Sample Code\n\n```"]