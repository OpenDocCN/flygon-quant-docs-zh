- en: Multi Example
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/blog/posts/2017-04-09-multi-example/multi-example/](https://www.backtrader.com/blog/posts/2017-04-09-multi-example/multi-example/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A couple of topics in the [Community](https://community.backtrader.com) seem
    to be oriented as to how to keep track of orders, especially when several data
    feeds are in play and also including when multiple orders are working together
    like in the case of *bracket orders*
  prefs: []
  type: TYPE_NORMAL
- en: 'The script below tries to serve as a sample by allowing the user to:'
  prefs: []
  type: TYPE_NORMAL
- en: Use 3 data feeds
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use either
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A single *buy* order of type `Market` when `usebracket=False`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: or
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A *bracket* order set (`usebracket=True`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: In this case how the bracket set is created can be specified
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Issuing 3 orders (1 parent + 2 children) when `rawbracket=True`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Making a call to `buy_bracket` when `rawbracket=False`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The main bracket order has an expiry period after `valid` days (default is `10`)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A position will be entered (or at least attempted to enter) when the `weekday`
    matches the `enter` value defined for each data feed which defaults to `[1, 3,
    4]`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A open position will be exited
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With a regular `close` after a `holding` period. The period is defined individually
    for each of the data feeds in a list with the parameter `hold` which defaults
    to `[7, 10, 15]`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: This will trigger the cancelation of the `stop` side of any *bracket* order
    if present (which will automatically cancel the other side)
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Or if *brackets* are in use, when either the `stop` (limit losses) or the `limit`
    (take profit) side gets executed (the system will automatically cancel the other
    side)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Orders are kept in
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dict` which uses the `data` as the key'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: contains a `list` per `data` entry with the orders which are open for each `data`
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Once the orders have been issued, the management is done in `notify_order`
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Additionally:'
  prefs: []
  type: TYPE_NORMAL
- en: A `TestSizer` is used which will return different values for `buy` and `sell`
    orders as a test
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Because only *long* operations are initiated, only the `buy` sizing will be
    returned and the output log will contain no traces of the `sell` sizing.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: A profuse log of operations, positions and order management is created to aid
    in understanding what’s happening.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s see a sample execution with the default values of `usebracket=True` and
    `rawbracket=True` (to ease the plot, volume will be removed):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![image](../Images/c33c44402b58012a4e07f3e0a1929f5b.png)'
  prefs: []
  type: TYPE_IMG
- en: A 2^(nd) execution sets `rawbracket=False`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Which outputs exactly the same result, this time having used `buy_bracket`.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/43d5dcc72727e9b70e60d8b20793f81b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And finally disabling bracket usage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![image](../Images/88007dbea907e091bf7507b28a5964f9.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This should serve as a good example of order management, with multiple data
    feeds and order sets.
  prefs: []
  type: TYPE_NORMAL
- en: Sample usage
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Sample Code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
