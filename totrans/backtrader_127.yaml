- en: StopTrail(Limit)
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/blog/posts/2017-03-22-stoptrail/stoptrail/](https://www.backtrader.com/blog/posts/2017-03-22-stoptrail/stoptrail/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Release `1.9.35.116` adds the `StopTrail` and `StopTrailLimit` order execution
    types to the backtesting arsenal.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This is only implemented in backtesting and there isn’t yet an implementation
    for live brokers
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Updated with release `1.9.36.116`. Interactive Brokers support for `StopTrail`,
    `StopTrailLimit` and `OCO`.
  prefs: []
  type: TYPE_NORMAL
- en: '`OCO` Specify always the 1^(st) order in a group as parameter `oco`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`StopTrailLimit`: the broker simulation and the `IB` broker have the asme behavior.
    Specify: `price` as the initial stop trigger price (specify also `trailamount`)
    and then `plimi` as the initial limit price. The difference between the two will
    determine the `limitoffset` (the distance at which the limit price remains from
    the stop trigger price)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The usage pattern is fully integrated into the standard `buy`, `sell` and `close`
    market operation methods of the strategy instances. To notice:'
  prefs: []
  type: TYPE_NORMAL
- en: Indicate which execution type is wished as in `exectype=bt.Order.StopTrail`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And whether the trailing price must be calculated with a fixed distance or with
    a percentage based distance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fixed distance: `trailamount=10`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Percentage based distance: `trailpercent=0.02` (i.e.: `2%`)'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If one has entered the market long by issuing a `buy`, this is what a `sell`
    with `StopTrail` and `trailamount` does:'
  prefs: []
  type: TYPE_NORMAL
- en: If no `price` is specified, the latest `close` price is used
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`trailamount` is substracted from the price to find the `stop` (or trigger)
    price'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The next iteration of the *broker* checks if the trigger price has been reached
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If **Yes**: the order is executed with a `Market` execution type approach'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If **No**, the `stop` price is recalculated by using the latest `close` price
    and substracting the `trailamount` distance
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If the new price goes up, it is updated
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: If the new price would go down (or not change at all), it is discarded
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'That is: the trailing stop price follows the price upwards, but remains fixed
    if the prices start falling, to potentially secure a profit.'
  prefs: []
  type: TYPE_NORMAL
- en: 'If one had entered the market with a `sell`, then issuing a `buy` order with
    `StopTrail` simply does the opposite, i.e.: prices are followed downwards.'
  prefs: []
  type: TYPE_NORMAL
- en: Some usage patterns
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: One can also specify `trailpercent` instead of `trailamount` and the distance
    to the price will be calculated as a percentage of the price
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: For a `StopTrailLimit`
  prefs: []
  type: TYPE_NORMAL
- en: The only difference is what happens when the trailing stop price is triggered.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this case the order is executed as a `Limit` order (the same behavior a `StopLimit`
    order has, but in this case with a dynamic triggering price)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: one has to specify `plimit=x.x` to `buy` or `sell`, which will be the *limit*
    price
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: the *limit* price is not changed dynamically like the stop/trigger price
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: An example is always worth a thousand words and hence the usual *backtrader*
    sample, which
  prefs: []
  type: TYPE_NORMAL
- en: Uses a moving average crossing up to enter the market long
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uses a trailing stop to exit the market
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The execution with `50` points of fixed price distance
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Which produces the following chart
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/030b1a3d8a6be252026b23ba1c0f7b4e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Rather than waiting for the usual cross down pattern the system uses the trailing
    stop to exit the market. Let’s see the 1^(st) operation for example
  prefs: []
  type: TYPE_NORMAL
- en: 'Closing price when entering long: `3075.76`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'System calculated trail stop price: `3025.76` (which is `50` units away)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Sample calculated trail stop price: `3025.76` (last price shown in each line)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'After this first calculation:'
  prefs: []
  type: TYPE_NORMAL
- en: The closing price goes up to `3086.95` and the stop price is adjusted to `3036.95`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The following closing prices don’t exceed `3086.95` and the trigger price doesn’t
    change
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The same pattern can be seen in the other 2 operations.
  prefs: []
  type: TYPE_NORMAL
- en: For the sake of comparison, an execution with just `30` points of fixed distance
    (just the chart)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: And the chart
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/69e17cf0f258229d01dc367c6a652b3c.png)'
  prefs: []
  type: TYPE_IMG
- en: Followed by one last execution with `trailpercent=0.02`
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The corresponding chart.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/3f77b8d82105da692387c954ace0e992.png)'
  prefs: []
  type: TYPE_IMG
- en: The sample usage
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: The sample code
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
