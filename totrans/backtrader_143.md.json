["```py\n`import backtrader as bt\n\nclass MyStrategy(bt.Strategy):\n\n    def __init__(self):\n\n        self.hi_lo_avg = (self.data.high + self.data.low) / 2.0\n\n    def next(self):\n        if self.hi_lo_avg[0] > another_value:\n            print('we have a winner!')\n\n...\n...\ncerebro.addstrategy(MyStrategy)\ncerebro.run()` \n```", "```py\n`self.hi_lo_avg = (self.data.high + self.data.low) / 2.0` \n```", "```py\n`temp = self.data.high - self.data.low` \n```", "```py\n`self.hi_lo_avg = temp / 2.0` \n```", "```py\n`import backtrader as bt\n\nclass MyStrategy(bt.Strategy):\n\n    def __init__(self):\n        self.hi_lo_avg = (self.data.high + self.data.low) / 2.0\n        self.sma = bt.indicators.SMA(period=30)\n\n    def next(self):\n        if self.hi_lo_avg[0] > self.sma[0]:\n            print('we have a winner!')\n\n...\n...\ncerebro.addstrategy(MyStrategy)\ncerebro.run()` \n```", "```py\n`import backtrader as bt\n\nclass MyStrategy(bt.Strategy):\n\n    def __init__(self):\n        self.hi_lo_avg = (self.data.high + self.data.low) / 2.0\n        self.sma = bt.indicators.SMA(period=30)\n\n    def next(self):\n        if self.hi_lo_avg > self.sma:\n            print('we have a winner!')\n\n...\n...\ncerebro.addstrategy(MyStrategy)\ncerebro.run()` \n```", "```py\n`import backtrader as bt\n\nclass MyStrategy(bt.Strategy):\n\n    def __init__(self):\n        hi_lo_avg = (self.data.high + self.data.low) / 2.0\n        sma = bt.indicators.SMA(period=30)\n        self.signal = hi_lo_avg > sma\n\n    def next(self):\n        if self.signal:\n            print('we have a winner!')\n\n...\n...\ncerebro.addstrategy(MyStrategy)\ncerebro.run()` \n```"]