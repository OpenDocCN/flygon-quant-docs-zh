- en: Ultimate Oscillator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/blog/posts/2016-06-22-ultimate-oscillator/ultimate-oscillator/](https://www.backtrader.com/blog/posts/2016-06-22-ultimate-oscillator/ultimate-oscillator/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: One of the goals when the development of *backtrader* was kickstarted was to
    make it very easy (at least for the author himself) to develop new *Indicators*
    to test ideas both mathematically and visually.
  prefs: []
  type: TYPE_NORMAL
- en: '[Ticket #102](https://github.com/mementum/backtrader/issues/102) is about adding
    the **UltimateOscillator** to the arsenal of *backtrader*'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: It will be added in the next release, meanwhile it can be used, using the code
    below.
  prefs: []
  type: TYPE_NORMAL
- en: 'The reference as indicated in the ticket:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:ultimate_oscillator](http://stockcharts.com/school/doku.php?id=chart_school:technical_indicators:ultimate_oscillator)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'and also at:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Ultimate_oscillator](https://en.wikipedia.org/wiki/Ultimate_oscillator)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: No need to repeat it here.
  prefs: []
  type: TYPE_NORMAL
- en: 'Quoting from the reference:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Summary:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First subclass from `bt.Indicator` to make sure the entire machinery works:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'It has 1 output line: we’ll name it `uo`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'It has 3 parameters which define 3 periods with default values `7`, `14` and
    `28`. To be named `p1`, `p2` and `p3`:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: The calculations use some things already built-in *backtrader*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Minimum(Low or Prior Close)`: this is `TrueLow` as defined by *Welles Wilder*
    for the `RSI` indicator. As such the `BP` or *Buying Pressure* can be calculated:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '`Maximum(Low or Prior Close) - Minimum(Low or Prior Close)`: this is `TrueRange`
    as defined by *Welles Wilder* for the `RSI` indicator (which can be expressed
    as `TrueHigh - TrueLow`. The next calculation is therefore as easy as:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'The rest are pure math operations, using `SumN` to add up the latest `p1`,
    `p2`, `p3` periods of `bp` and `tr`, plus the weighted calculation:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Finally the assignment of the calculation to the defined `uo` line:'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: It seems longer than it actually is (the full code, including imports) at the
    bottom.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since we want not only the values but also a nice looking plot, like the ones
    provided by *Stockcharts*, we’ll be adding 2 extra touches:'
  prefs: []
  type: TYPE_NORMAL
- en: '2 parameters which determine where to place the horizontal lines that delimit
    the *overbought* and *oversold* areas (ala `RSI` or `Stochastic`):'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'And plot initialization code to use the parameters. Ticks at `10`, `50` and
    `90` like in the *Stockcharts* plots will be added:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: To test and to further use existing facilities provided by *backtrader*, the
    `btrun` executable installed along with *backtrader* will be used.
  prefs: []
  type: TYPE_NORMAL
- en: The indicator is stored in a file named `ultimateoscillator.py`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The data used is one of the data samples available in the sources of *backtrader*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The indicator will be added twice with the default parameters and with shorter
    term parameters
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Execution:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Using –nostdstats to remove some observers from the chart. No need to track
    cash and value in this case
  prefs: []
  type: TYPE_NORMAL
- en: The output is simply a chart showing the evolution of the `UltimateOscillator`.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/0a620a681b25795fda979adcebc6054d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The `UltimateOscillator` code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
