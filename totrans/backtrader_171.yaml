- en: Escape from OHLC Land
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 逃离OHLC之地
- en: 原文：[https://www.backtrader.com/blog/posts/2016-03-08-escape-from-ohlc-land/escape-from-ohlc-land/](https://www.backtrader.com/blog/posts/2016-03-08-escape-from-ohlc-land/escape-from-ohlc-land/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://www.backtrader.com/blog/posts/2016-03-08-escape-from-ohlc-land/escape-from-ohlc-land/](https://www.backtrader.com/blog/posts/2016-03-08-escape-from-ohlc-land/escape-from-ohlc-land/)
- en: One of the key concepts applied during the conception and development of backtrader
    was **flexibility**. The *metaprogramming* and *introspection* capabilities of
    Python were (and still are) the basis to keep many things flexible whilst still
    being able to deliver.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在backtrader的构思和开发过程中应用的一个关键概念是**灵活性**。Python的*元编程*和*内省*能力是保持许多灵活性的基础，同时仍能够交付成果。
- en: An old post shows the extension concept.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一篇旧文章展示了扩展概念。
- en: '[Extending a datafeed](http://blog.backtrader.com/posts/2015-08-07/extending-a-datafeed/)'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[扩展数据源](http://blog.backtrader.com/posts/2015-08-07/extending-a-datafeed/)'
- en: 'The basics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 基础知识：
- en: '[PRE0]'
  id: totrans-6
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Done. `backtrader` defines in the background the most usual lines: OHLC.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 完成。`backtrader`在后台定义了最常见的线：OHLC。
- en: 'If we digged into the final aspect of `GenericCSV_PE`, the sum of inherited
    plus newly defined lines would yield the following lines:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们深入研究`GenericCSV_PE`的最终方面，继承加上新定义的线的总和将产生以下线：
- en: '[PRE1]'
  id: totrans-9
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This can be check at any time with the method `getlinealiases` (applicable to
    *DataFeeds*, *Indicators*, *Strategies* and *Observers*)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以随时通过`getlinealiases`方法检查（适用于*DataFeeds*、*Indicators*、*Strategies*和*Observers*）
- en: The mechanism is flexible and by poking a bit into the internals you could actually
    get anything, but it has been proven not to be enough.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 机制是灵活的，通过对内部进行一些探索，你实际上可以得到任何东西，但已经证明这还不够。
- en: '[Ticket #60](https://github.com/mementum/backtrader/issues/60) asks about supporting
    *High Frequency Data*, ie: Bid/Ask data. Which implies that the predefined *lines*
    hierarchy in the form of *OHLC* is not enough. The *Bid* and *Ask* prices, volumes
    and number of trades can be made to fit into the existing *OHLC* fields, but it
    wouldn’t feel natural. And if one is only concerned with the *Bid* and *Ask* prices,
    there would be too many fields left untouched.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[Ticket #60](https://github.com/mementum/backtrader/issues/60)询问是否支持*高频数据*，即：Bid/Ask数据。这意味着以*OHLC*形式预定义的*lines*层次结构不够用。*Bid*和*Ask*价格、成交量和交易数量可以适应现有的*OHLC*字段，但这不会感觉自然。如果只关注*Bid*和*Ask*价格，会有太多未触及的字段。'
- en: 'This called for a solution which has been implemented with [Release 1.2.1.88](http://blog.backtrader.com/posts/2016-03-07-release-1.2.1.88/release-1.2.1.88/).
    The idea can be summarized as:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要一个解决方案，已经在[发布1.2.1.88](http://blog.backtrader.com/posts/2016-03-07-release-1.2.1.88/release-1.2.1.88/)中实施。这个想法可以总结为：
- en: Now it’s not only possible to *extend* the existing hierarchy, but also to *replace*
    the hierarchy with a new one
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在不仅可以*扩展*现有的层次结构，还可以用新的层次结构*替换*原有的层次结构
- en: 'Only one constraint in place:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 只有一个约束条件：
- en: There must be a `datetime` field present (which will hopefully contain meaningful
    `datetime` information)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须存在一个`datetime`字段（希望其中包含有意义的`datetime`信息）
- en: This is so because `backtrader` needs something for synchronization (multiple
    datas, multiple timeframes, resampling, replaying) just like Archimedes needed
    a lever.
  id: totrans-17
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是因为`backtrader`需要一些用于同步的东西（多个数据源、多个时间框架、重新采样、重播），就像阿基米德需要杠杆一样。
- en: 'Here it is how it works:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是它的工作原理：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Done.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 完成。
- en: Ok, not fully. But only because we are looking at loading the lines from a *csv*
    source. The hierarchy has actually already been **replaced** with the *bid, ask
    datetime* definition thanks to the `linesoverride=True` setting.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，不完全是因为我们正在查看从*csv*源加载的行。层次结构实际上已经被**替换**为*bid, ask datetime*定义，这要归功于`linesoverride=True`设置。
- en: 'The original `GenericCSVData` class parses a *csv* file and needs a hint as
    to where the *fields* corresponding to the *lines* are located. The original definition
    is:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 原始的`GenericCSVData`类解析一个*csv*文件，并需要提示哪里是对应于*lines*的*fields*。原始定义如下：
- en: '[PRE3]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The new *hierarchy-redefining-class* can be completed with a light touch:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 新的*重新定义层次结构类*可以轻松完成：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Indicating that *Bid* prices are field #1 in the csv stream and *Ask* prices
    are field #2\. We have left the *datetime* #0 definition untouched from the base
    class.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '表明*Bid*价格是csv流中的字段#1，*Ask*价格是字段#2。我们保留了基类中的*datetime* #0定义不变。'
- en: 'Crafting a small data file for the occasion helps:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为此制作一个小数据文件有所帮助：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Add a small test script to the equation (with some more content for those who
    just go directly to the samples in the sources) (see full code at the end):'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个小测试脚本添加到等式中（对于那些直接转到源代码中的示例的人来说，增加一些内容）（见最后的完整代码）：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'And the output speaks up for itself:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 输出说明一切：
- en: '[PRE7]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Et voilá! The *Bid*/*Ask* prices have been properly read, parsed and interpreted
    and the strategy has been able to access the *.bid* and *.ask* lines in the data
    feed through *self.data*.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 瞧！*Bid*/*Ask*价格已经被正确读取、解析和解释，并且策略已能通过*self.data*访问数据源中的*.bid*和*.ask*行。
- en: Redefining the *lines* hierarchy opens a broad question though and that is the
    usage of the already predefined *Indicators*.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 重新定义*lines*层次结构却带来一个广泛的问题，即已预定义的*Indicators*的用法。
- en: 'Example: the *Stochastic* is an indicator which relies on *close*, *high* and
    *low* prices to calculate its output'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 例如：*Stochastic*是一种依赖于*close*、*high*和*low*价格来计算其输出的指标。
- en: Even if we though about *Bid* as the *close* (because is the first) there is
    only one other *price* element (*Ask*) and not two more. And conceptually *Ask*
    has nothing to do with *high* and *low*
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 即使我们把*Bid*视为*close*（因为它是第一个），仅有另一个*price*元素（*Ask*），而不是另外两个。而概念上，*Ask*与*high*和*low*没有任何关系。
- en: It is probable that someone working with these fields and operating (or researching)
    in the *High Frequency Trading* domain is not concerned with *Stochastic* as an
    indicator of choice
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 有可能，与这些字段一起工作并在*高频交易*领域操作（或研究）的人并不关心*Stochastic*作为首选指标
- en: 'Other indicators like *moving average* are perfectly fine. They assume nothing
    about what the fields mean or imply and will happily take anything. As such one
    can do:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他指标如*移动平均*完全正常。它们对字段的含义或暗示不做任何假设，且乐意接受任何东西。因此，可以这样做：
- en: '[PRE8]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: And an moving average of the last 5 *bid* prices will be delivered
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 并且将提供最后5个*bid*价格的移动平均线
- en: 'The test script already supports adding a *SMA*. Let’s execute:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 测试脚本已经支持添加*SMA*。让我们执行：
- en: '[PRE9]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The output:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 输出：
- en: '[PRE10]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Note
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Plotting still relies on `open`, `high`, `low`, `close` and `volume` being present
    in the *data* feed.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 绘图仍然依赖于`open`、`high`、`low`、`close`和`volume`存在于数据源中。
- en: Some cases can be directly covered by simply plotting with a *Line on Close*
    and taking just the 1^(st) defined line in the object. But a sound model has to
    be developed. For an upcoming version of `backtrader`
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一些情况可以通过简单地用*Line on Close*绘图并仅取对象中的第1个定义行来直接覆盖。但是必须开发一个合理的模型。针对即将推出的`backtrader`版本
- en: 'The test script usage:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 测试脚本用法：
- en: '[PRE11]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: And the test script itself (included in the `backtrader` sources)
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 而测试脚本本身（包含在`backtrader`源代码中）
- en: '[PRE12]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
