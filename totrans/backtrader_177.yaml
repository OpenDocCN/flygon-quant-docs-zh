- en: MultiTrades
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/blog/posts/2015-10-05-multitrades/multitrades/](https://www.backtrader.com/blog/posts/2015-10-05-multitrades/multitrades/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: One can now add a unique identifier to each trade, even if running on the same
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Following a request at [Tick Data and Resampling](https://disqus.com/home/discussion/backtrader/tick_data_and_resampling/?utm_source=digest&utm_medium=email&utm_content=replies)
    release 1.1.12.88 of `backtrader` support “MultiTrades”, ie: the ability to assign
    a `tradeid` to orders. This id is passed on to `Trades` which makes it possible
    to have different categories of trades and have them simultaneously open.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The `tradeid` can be specified when:'
  prefs: []
  type: TYPE_NORMAL
- en: Calling Strategy.buy/sell/close with kwarg `tradeid`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calling Broker.buy/sell with kwarg `tradeid`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an Order instance with kwarg `tradeid`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If not specified the default value is:'
  prefs: []
  type: TYPE_NORMAL
- en: '`tradeid = 0`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To test a small script has been implemented, visualizing the result with the
    implementation of a custom `MTradeObserver` which assigns different markers on
    the plot according `tradeid` (for the test values 0, 1 and 2 are used)
  prefs: []
  type: TYPE_NORMAL
- en: The script supports using the three ids (0, 1, 2) or simply use 0 (default)
  prefs: []
  type: TYPE_NORMAL
- en: 'An execution without enabling multiple ids:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: With the resulting chart showing all Trades carry id `0` and therefore cannot
    be diferentiated.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/40fd891ccc3bcde6056915b3ccb9276d.png)'
  prefs: []
  type: TYPE_IMG
- en: 'A second execution enables multitrades by cycling amongs 0, 1 and 2:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: And now 3 different markers alternate showing each Trade can be distinguished
    using the `tradeid` member.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/594ae51025c1ce1d2b298edb5eb8ce2e.png)'
  prefs: []
  type: TYPE_IMG
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: '`backtrader` tries to use models which mimic reality. Therefore “trades” are
    not calculated by the `Broker` instance which only takes care of oders.'
  prefs: []
  type: TYPE_NORMAL
- en: Trades are calculated by the Strategy.
  prefs: []
  type: TYPE_NORMAL
- en: And hence `tradeid` (or something similar) may not be supported by a real life
    broker in which case manually keeping track of the unique orde id assigned by
    the broker would be needed.
  prefs: []
  type: TYPE_NORMAL
- en: Now, the code for the custom observer
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'The main script usage:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: The code for the script.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
