- en: Data - Replay
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/blog/posts/2015-08-25-data-replay/data-replay/](https://www.backtrader.com/blog/posts/2015-08-25-data-replay/data-replay/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The time is gone and testing a strategy against a fully formed and closed bar
    is good, but it could be better.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is where *Data Replay* comes in to help. If:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The strategy operates on data with a timeframe X (example: daily)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and
  prefs: []
  type: TYPE_NORMAL
- en: 'Data for a smaller timeframe Y (example: 1 minute) is available'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Data replay does exactly what the name implies:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This is of course not exactly how the market developed, but it is far better
    than looking at the daily fully formed and closed bar in isolation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Putting *Data Replay* into action follows the regular usage patterns of `backtrader`
  prefs: []
  type: TYPE_NORMAL
- en: Load a data feed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pass the data to `DataReplayer` which is yet another data feed that will work
    on the loaded data feed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pass the new data feed to cerebro
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a strategy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And run … *WITH PRELOAD DISABLED**
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Preloading cannot be supported when data is being replayed because each bar
    is actually built in real-time.
  prefs: []
  type: TYPE_NORMAL
- en: 'For the sake of working with a example the standard 2006 daily data will be
    replayed on a weekly basis. Which means:'
  prefs: []
  type: TYPE_NORMAL
- en: There will finally be 52 bars, one for each week
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cerebro will call `prenext` and `next` a total of 255 times, which is the original
    count of daily bars
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The trick:'
  prefs: []
  type: TYPE_NORMAL
- en: When a weekly bar is forming, the length (`len(self)`) of the strategy will
    remain unchanged.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: With each new week the length will increase by one
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some examples below, but first the sauce of the test script in which the data
    is loaded and passed to a replayer … and `run` with `preload=False` to disable
    preloading (COMPULSORY)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Example - Replay Daily to Weekly
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The invocation of the script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The chart cannot unfortunately show us the real thing happening in the background,
    so let’s have a look at the console output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: As we see the internal `self.counter` variable is keeping track of each call
    to either `prenext` or `next`. The former being called before the applied Simple
    Moving Average produces a value. The latter called when the Simple Moving Average
    is producing values.
  prefs: []
  type: TYPE_NORMAL
- en: 'The key:'
  prefs: []
  type: TYPE_NORMAL
- en: The length (len(self)) of the strategy changes every 5 bars (5 trading days
    in the week)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The strategy is effectively seeing:'
  prefs: []
  type: TYPE_NORMAL
- en: How the weekly bar developed in 5 shots.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: This, again, doesn’t replicate the actual tick-by-tick (and not even minute,
    hour) development of the market, but it is better than actually seeing a bar.
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: The visual output is that of the weekly chart which is the final outcome the
    system is being tested again.
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/6a15e577f372430eaff45cd9c5fa7d02.png)'
  prefs: []
  type: TYPE_IMG
- en: Example 2 - Daily to Daily with Compression
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Of course “Replaying” can be applied to the same timeframe but with a compression.
  prefs: []
  type: TYPE_NORMAL
- en: 'The console:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: This time we got half the bars as expected because of the factor 2 requested
    compression.
  prefs: []
  type: TYPE_NORMAL
- en: 'The chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '![image](../Images/cf38a0c17f1ac390e19f0f799c7eb042.png)'
  prefs: []
  type: TYPE_IMG
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A reconstruction of the market development is possible. Usually a smaller timeframe
    set of data is available and can be used to discretely replay the timeframe which
    the system operates on.
  prefs: []
  type: TYPE_NORMAL
- en: The test script.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
