- en: Extending a data feed
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://www.backtrader.com/blog/posts/2015-08-07-extending-a-datafeed/extending-a-datafeed/](https://www.backtrader.com/blog/posts/2015-08-07-extending-a-datafeed/extending-a-datafeed/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Issues in GitHub are actually pushing into finishing documentation parts or
    helping me to understand if backtrader has the ease of use and flexibility I envisioned
    from the first moments and the decisions made along the way.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this case is [Issue #9](https://github.com/mementum/backtrader/issues/9).'
  prefs: []
  type: TYPE_NORMAL
- en: 'The question finally seems to boil down to:'
  prefs: []
  type: TYPE_NORMAL
- en: Can the end user easily extend the existing mechanisms to add extra information
    in the form of lines that gets passed along other existing price information spots
    like `open`, `high`, etc?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As far as I understand the question the answer is: **Yes**'
  prefs: []
  type: TYPE_NORMAL
- en: 'The poster seems to have these requirements (from [Issue #6](https://github.com/mementum/backtrader/issues/6)):'
  prefs: []
  type: TYPE_NORMAL
- en: A data source which is being parsed into CSV format
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using `GenericCSVData` to load the information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This generic csv support was developed in response to this [Issue #6](https://github.com/mementum/backtrader/issues/6)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: An extra field which apparently contains P/E information which needs to be passed
    along the parsed CSV Data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Let’s build on the CSV Data Feed Development and A Generic CSV Data Feed example
    posts.
  prefs: []
  type: TYPE_NORMAL
- en: 'Steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Assume the P/E information is being set in the CSV data which is parsed
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use `GenericCSVData` as the base class
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Extend the existng lines (open/high/low/close/volumen/openinterest) with `pe`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add a parameter to let the caller determine the column position of the P/E information
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The result:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: And the job is done …
  prefs: []
  type: TYPE_NORMAL
- en: 'Later and when using this data feed inside a strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Plotting that extra P/E line
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There is obviously no automated plot support for that extra line in the data
    feed.
  prefs: []
  type: TYPE_NORMAL
- en: 'The best alternative would be to do a SimpleMovingAverage on that line and
    plot it in a separate axis:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
