["```py\n`cerebro.optstrategy(StrategyClass, *args, **kwargs)` \n```", "```py\n`cerebro.addstrategy(StrategyClass, *args, **kwargs)` \n```", "```py\n`from __future__ import (absolute_import, division, print_function,\n                        unicode_literals)\n\nimport time\n\nfrom six.moves import xrange\n\nimport backtrader as bt\nimport backtrader.indicators as btind\nimport backtrader.feeds as btfeeds\n\nclass OptimizeStrategy(bt.Strategy):\n    params = (('smaperiod', 15),\n              ('macdperiod1', 12),\n              ('macdperiod2', 26),\n              ('macdperiod3', 9),\n              )\n\n    def __init__(self):\n        # Add indicators to add load\n\n        btind.SMA(period=self.p.smaperiod)\n        btind.MACD(period_me1=self.p.macdperiod1,\n                   period_me2=self.p.macdperiod2,\n                   period_signal=self.p.macdperiod3)\n\nif __name__ == '__main__':\n    # Create a cerebro entity\n    cerebro = bt.Cerebro(maxcpus=None)\n\n    # Add a strategy\n    cerebro.optstrategy(\n        OptimizeStrategy,\n        smaperiod=xrange(5, 40),\n        macdperiod1=xrange(12, 20),\n        macdperiod2=xrange(26, 30),\n        macdperiod3=xrange(9, 15),\n    )\n\n    # Create a Data Feed\n    datapath = ('../datas/2006-day-001.txt')\n    data = bt.feeds.BacktraderCSVData(dataname=datapath)\n\n    # Add the Data Feed to Cerebro\n    cerebro.adddata(data)\n\n    # clock the start of the process\n    tstart = time.clock()\n\n    # Run over everything\n    stratruns = cerebro.run()\n\n    # clock the end of the process\n    tend = time.clock()\n\n    print('==================================================')\n    for stratrun in stratruns:\n        print('**************************************************')\n        for strat in stratrun:\n            print('--------------------------------------------------')\n            print(strat.p._getkwargs())\n    print('==================================================')\n\n    # print out the result\n    print('Time used:', str(tend - tstart))` \n```"]