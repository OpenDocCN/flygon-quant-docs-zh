["```py\n`class DonchianChannels(bt.Indicator):\n  '''\n Params Note:\n - `lookback` (default: -1)\n If `-1`, the bars to consider will start 1 bar in the past and the\n current high/low may break through the channel.\n If `0`, the current prices will be considered for the Donchian\n Channel. This means that the price will **NEVER** break through the\n upper/lower channel bands.\n '''\n\n    alias = ('DCH', 'DonchianChannel',)\n\n    lines = ('dcm', 'dch', 'dcl',)  # dc middle, dc high, dc low\n    params = dict(\n        period=20,\n        lookback=-1,  # consider current bar or not\n    )\n\n    plotinfo = dict(subplot=False)  # plot along with data\n    plotlines = dict(\n        dcm=dict(ls='--'),  # dashed line\n        dch=dict(_samecolor=True),  # use same color as prev line (dcm)\n        dcl=dict(_samecolor=True),  # use same color as prev line (dch)\n    )\n\n    def __init__(self):\n        hi, lo = self.data.high, self.data.low\n        if self.p.lookback:  # move backwards as needed\n            hi, lo = hi(self.p.lookback), lo(self.p.lookback)\n\n        self.l.dch = bt.ind.Highest(hi, period=self.p.period)\n        self.l.dcl = bt.ind.Lowest(lo, period=self.p.period)\n        self.l.dcm = (self.l.dch + self.l.dcl) / 2.0  # avg of the above` \n```"]