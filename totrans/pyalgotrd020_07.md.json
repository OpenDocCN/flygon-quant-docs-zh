["```py\nfrom __future__ import print_function\n\nfrom pyalgotrade import dataseries\nfrom pyalgotrade import technical\n\n# An EventWindow is responsible for making calculations using a window of values.\nclass Accumulator(technical.EventWindow):\n    def getValue(self):\n        ret = None\n        if self.windowFull():\n            ret = self.getValues().sum()\n        return ret\n\n# Build a sequence based DataSeries.\nseqDS = dataseries.SequenceDataSeries()\n# Wrap it with a filter that will get fed as new values get added to the underlying DataSeries.\naccum = technical.EventBasedFilter(seqDS, Accumulator(3))\n\n# Put in some values.\nfor i in range(0, 50):\n    seqDS.append(i)\n\n# Get some values.\nprint(accum[0])  # Not enough values yet.\nprint(accum[1])  # Not enough values yet.\nprint(accum[2])  # Ok, now we should have at least 3 values.\nprint(accum[3])\n\n# Get the last value, which should be equal to 49 + 48 + 47.\nprint(accum[-1]) \n```", "```py\nNone\nNone\n3.0\n6.0\n144.0 \n```"]