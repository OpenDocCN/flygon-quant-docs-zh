- en: optimizer – Parallel optimizers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://gbeced.github.io/pyalgotrade/docs/v0.20/html/optimizer.html](https://gbeced.github.io/pyalgotrade/docs/v0.20/html/optimizer.html)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*class* `pyalgotrade.optimizer.server.``Results`(*parameters*, *result*)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'Bases: `object`'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: The results of the strategy executions.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: '`getParameters`()'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Returns a sequence of parameter values.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: '`getResult`()'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Returns the result for a given set of parameters.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '`pyalgotrade.optimizer.server.``serve`(*barFeed*, *strategyParameters*, *address*,
    *port*, *batchSize=200*)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: Executes a server that will provide bars and strategy parameters for workers
    to use.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '| Parameters: |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
- en: '**barFeed** (`pyalgotrade.barfeed.BarFeed`.) – The bar feed that each worker
    will use to backtest the strategy.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**strategyParameters** – The set of parameters to use for backtesting. An iterable
    object where **each element is a tuple that holds parameter values**.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**address** (*string.*) – The address to listen for incoming worker connections.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**port** (*int.*) – The port to listen for incoming worker connections.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**batchSize** (*int.*) – The number of strategy executions that are delivered
    to each worker.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '| Return type: | A [`Results`](#pyalgotrade.optimizer.server.Results "pyalgotrade.optimizer.server.Results")
    instance with the best results found or None if no results were obtained. |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
- en: '`pyalgotrade.optimizer.worker.``run`(*strategyClass*, *address*, *port*, *workerCount=None*,
    *workerName=None*)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: Executes one or more worker processes that will run a strategy with the bars
    and parameters supplied by the server.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '| Parameters: |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
- en: '**strategyClass** – The strategy class.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**address** (*string.*) – The address of the server.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**port** (*int.*) – The port where the server is listening for incoming connections.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**workerCount** (*int.*) – The number of worker processes to run. If None then
    as many workers as CPUs are used.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**workerName** (*string.*) – A name for the worker. A name that identifies
    the worker. If None, the hostname is used.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '`pyalgotrade.optimizer.local.``run`(*strategyClass*, *barFeed*, *strategyParameters*,
    *workerCount=None*, *logLevel=40*, *batchSize=200*)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Executes many instances of a strategy in parallel and finds the parameters that
    yield the best results.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '| Parameters: |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
- en: '**strategyClass** – The strategy class.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**barFeed** (`pyalgotrade.barfeed.BarFeed`.) – The bar feed to use to backtest
    the strategy.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**strategyParameters** – The set of parameters to use for backtesting. An iterable
    object where **each element is a tuple that holds parameter values**.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**workerCount** (*int.*) – The number of strategies to run in parallel. If
    None then as many workers as CPUs are used.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**logLevel** – The log level. Defaults to **logging.ERROR**.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**batchSize** (*int.*) – The number of strategy executions that are delivered
    to each worker.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '|'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '| Return type: | A `Results` instance with the best results found. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
- en: Note
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: The server component will split strategy executions in chunks which are distributed
    among the different workers. You can optionally set the chunk size by passing
    in **batchSize** to the constructor of **pyalgotrade.optimizer.xmlrpcserver.Server**.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器组件将策略执行分成不同的块，并分配给不同的工作器。您可以通过将**batchSize**传递给**pyalgotrade.optimizer.xmlrpcserver.Server**的构造函数来选择块大小。
- en: The `pyalgotrade.strategy.BaseStrategy.getResult()` method is used to select
    the best strategy execution. You can override that method to rank executions using
    a different criteria.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pyalgotrade.strategy.BaseStrategy.getResult()`方法用于选择最佳的策略执行。您可以重写该方法以使用不同的标准对执行进行排名。'
- en: Previous topic
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 上一个主题
- en: '[plotter – Strategy plotter](plotter.html "previous chapter")'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '[绘图器 – 策略绘图器](plotter.html "上一章节")'
- en: Next topic
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 下一个主题
- en: '[marketsession – Market sessions](marketsession.html "next chapter")'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[市场会话 – 市场会话](marketsession.html "下一章节")'
- en: This Page
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本页
- en: '[Show Source](_sources/optimizer.txt)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[显示源码](_sources/optimizer.txt)'
- en: Quick search
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 快速搜索
- en: Enter search terms or a module, class or function name.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 输入搜索词或模块、类或函数名称。
- en: Navigation
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 导航
- en: '[index](genindex.html "General Index")'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[索引](genindex.html "总索引")'
- en: '[modules](py-modindex.html "Python Module Index") |'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[模块](py-modindex.html "Python模块索引") |'
- en: '[next](marketsession.html "marketsession – Market sessions") |'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[下一章节](marketsession.html "市场会话 – 市场会话") |'
- en: '[previous](plotter.html "plotter – Strategy plotter") |'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[上一个](plotter.html "绘图器 – 策略绘图器") |'
- en: '[PyAlgoTrade 0.20 documentation](index.html) »'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[PyAlgoTrade 0.20 文档](index.html) »'
- en: '[Documentation for the code](code.html) »'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[代码文档](code.html) »'
