["```py\nclass LSEExchangeCalendar(TradingCalendar):\n  \"\"\"\n Exchange calendar for the London Stock Exchange\n\n Open Time: 8:00 AM, GMT\n Close Time: 4:30 PM, GMT\n\n Regularly-Observed Holidays:\n - New Years Day (observed on first business day on/after)\n - Good Friday\n - Easter Monday\n - Early May Bank Holiday (first Monday in May)\n - Spring Bank Holiday (last Monday in May)\n - Summer Bank Holiday (last Monday in May)\n - Christmas Day\n - Dec. 27th (if Christmas is on a weekend)\n - Boxing Day\n - Dec. 28th (if Boxing Day is on a weekend)\n \"\"\"\n\n  @property\n  def name(self):\n    return \"LSE\"\n\n  @property\n  def tz(self):\n    return timezone('Europe/London')\n\n  @property\n  def open_time(self):\n    return time(8, 1)\n\n  @property\n  def close_time(self):\n    return time(16, 30)\n\n  @property\n  def regular_holidays(self):\n    return HolidayCalendar([\n      LSENewYearsDay,\n      GoodFriday,\n      EasterMonday,\n      MayBank,\n      SpringBank,\n      SummerBank,\n      Christmas,\n      WeekendChristmas,\n      BoxingDay,\n      WeekendBoxingDay\n    ]) \n```", "```py\nfrom pandas.tseries.holiday import (\n    Holiday,\n    DateOffset,\n    MO\n)\n\nSomeSpecialDay = Holiday(\n    \"Some Special Day\",\n    month=1,\n    day=9,\n    offset=DateOffSet(weekday=MO(-1))\n) \n```", "```py\n# for setting our open and close times\nfrom datetime import time\n# for setting our start and end sessions\nimport pandas as pd\n# for setting which days of the week we trade on\nfrom pandas.tseries.offsets import CustomBusinessDay\n# for setting our timezone\nfrom pytz import timezone\n\n# for creating and registering our calendar\nfrom zipline.utils.calendar_utils import register_calendar, TradingCalendar\nfrom zipline.utils.memoize import lazyval \n```", "```py\nclass TFSExchangeCalendar(TradingCalendar):\n  \"\"\"\n An exchange calendar for trading assets 24/7.\n\n Open Time: 12AM, UTC\n Close Time: 11:59PM, UTC\n \"\"\"\n\n  @property\n  def name(self):\n  \"\"\"\n The name of the exchange, which Zipline will look for\n when we run our algorithm and pass TFS to\n the --trading-calendar CLI flag.\n \"\"\"\n    return \"TFS\"\n\n  @property\n  def tz(self):\n  \"\"\"\n The timezone in which we'll be running our algorithm.\n \"\"\"\n    return timezone(\"UTC\")\n\n  @property\n  def open_time(self):\n  \"\"\"\n The time in which our exchange will open each day.\n \"\"\"\n    return time(0, 0)\n\n  @property\n  def close_time(self):\n  \"\"\"\n The time in which our exchange will close each day.\n \"\"\"\n    return time(23, 59)\n\n  @lazyval\n  def day(self):\n  \"\"\"\n The days on which our exchange will be open.\n \"\"\"\n    weekmask = \"Mon Tue Wed Thu Fri Sat Sun\"\n    return CustomBusinessDay(\n      weekmask=weekmask\n    ) \n```", "```py\nclass LSEExchangeCalendar(TradingCalendar):\n  \"\"\"\n Exchange calendar for the London Stock Exchange\n\n Open Time: 8:00 AM, GMT\n Close Time: 4:30 PM, GMT\n\n Regularly-Observed Holidays:\n - New Years Day (observed on first business day on/after)\n - Good Friday\n - Easter Monday\n - Early May Bank Holiday (first Monday in May)\n - Spring Bank Holiday (last Monday in May)\n - Summer Bank Holiday (last Monday in May)\n - Christmas Day\n - Dec. 27th (if Christmas is on a weekend)\n - Boxing Day\n - Dec. 28th (if Boxing Day is on a weekend)\n \"\"\"\n\n  @property\n  def name(self):\n    return \"LSE\"\n\n  @property\n  def tz(self):\n    return timezone('Europe/London')\n\n  @property\n  def open_time(self):\n    return time(8, 1)\n\n  @property\n  def close_time(self):\n    return time(16, 30)\n\n  @property\n  def regular_holidays(self):\n    return HolidayCalendar([\n      LSENewYearsDay,\n      GoodFriday,\n      EasterMonday,\n      MayBank,\n      SpringBank,\n      SummerBank,\n      Christmas,\n      WeekendChristmas,\n      BoxingDay,\n      WeekendBoxingDay\n    ]) \n```", "```py\nfrom pandas.tseries.holiday import (\n    Holiday,\n    DateOffset,\n    MO\n)\n\nSomeSpecialDay = Holiday(\n    \"Some Special Day\",\n    month=1,\n    day=9,\n    offset=DateOffSet(weekday=MO(-1))\n) \n```", "```py\n# for setting our open and close times\nfrom datetime import time\n# for setting our start and end sessions\nimport pandas as pd\n# for setting which days of the week we trade on\nfrom pandas.tseries.offsets import CustomBusinessDay\n# for setting our timezone\nfrom pytz import timezone\n\n# for creating and registering our calendar\nfrom zipline.utils.calendar_utils import register_calendar, TradingCalendar\nfrom zipline.utils.memoize import lazyval \n```", "```py\nclass TFSExchangeCalendar(TradingCalendar):\n  \"\"\"\n An exchange calendar for trading assets 24/7.\n\n Open Time: 12AM, UTC\n Close Time: 11:59PM, UTC\n \"\"\"\n\n  @property\n  def name(self):\n  \"\"\"\n The name of the exchange, which Zipline will look for\n when we run our algorithm and pass TFS to\n the --trading-calendar CLI flag.\n \"\"\"\n    return \"TFS\"\n\n  @property\n  def tz(self):\n  \"\"\"\n The timezone in which we'll be running our algorithm.\n \"\"\"\n    return timezone(\"UTC\")\n\n  @property\n  def open_time(self):\n  \"\"\"\n The time in which our exchange will open each day.\n \"\"\"\n    return time(0, 0)\n\n  @property\n  def close_time(self):\n  \"\"\"\n The time in which our exchange will close each day.\n \"\"\"\n    return time(23, 59)\n\n  @lazyval\n  def day(self):\n  \"\"\"\n The days on which our exchange will be open.\n \"\"\"\n    weekmask = \"Mon Tue Wed Thu Fri Sat Sun\"\n    return CustomBusinessDay(\n      weekmask=weekmask\n    ) \n```"]